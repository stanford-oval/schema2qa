10	show me all songs by ultra flirt	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " ultra flirt " ^^org.schema.Music:Person => notify
11	on what album is krewella - alive	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " krewella " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " alive " ) => notify
12	who sings ponle remedio ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " ponle remedio " ) => notify
15	which of katy perry 's albums had the song dark horse ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " katy perry " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " dark horse " ) => notify
16	who sings closing time ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " closing time " ) => notify
18	from which album is champagne supernova ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " champagne supernova " ) => notify
110	what band sang the song dancing queen ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " dancing queen " ) => notify
111	what album by queen contains the song under pressure ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " queen " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " under pressure " ) => notify
114	send me the link for africa by toto .	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " toto " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " africa " ) => notify
115	what elvis costello album has the song alison on it ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " elvis costello " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " alison " ) => notify
117	which beatles album has the song something on it ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " beatles " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " something " ) => notify
119	which bob dylan album has the song like a rolling stone on it ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " bob dylan " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " like a rolling stone " ) => notify
121	will you play power in numbers by jurrasic 5 ?	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " jurrasic 5 " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " power in numbers " => notify
125	who sings the song called sweet child of mine ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " sweet child of mine " ) => notify
126	in what album is the song november rain by guns and roses in ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " guns and roses " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " november rain " ) => notify
127	who sings the song called home sweet alabama ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " home sweet alabama " ) => notify
128	in what album is free bird by lynyrd skynyrd in ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " lynyrd skynyrd " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " free bird " ) => notify
131	on which albums can i find the song cumberland blues ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " cumberland blues " ) => notify
133	give me a link to play the grateful dead song china cat sunflower online	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " grateful dead " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " china cat sunflower " ) => notify
135	what is the name of the micheal jackson album with song billie jean on it .	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " micheal jackson " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " billie jean " ) => notify
138	what artists sing true colors in trolls movie soundtrack .	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " true colors " and param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " trolls movie soundtrack " ^^org.schema.Music:MusicAlbum ) => notify
140	find songs from nirvana on album nevermind	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " nirvana " ^^org.schema.Music:Person and param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " nevermind " ^^org.schema.Music:MusicAlbum => notify
142	display url to the song everlong	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " everlong " ) => notify
143	what songs are on the album thriller ?	now => ( @org.schema.Music.MusicRecording ) filter param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " thriller " ^^org.schema.Music:MusicAlbum => notify
145	which album features the song love will tear us apart ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " love will tear us apart " ) => notify
146	find hunky dory by david bowie	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " david bowie " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " hunky dory " => notify
147	what album features the song my sharona ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " my sharona " ) => notify
148	find hey jude by the beatles	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " beatles " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " hey jude " => notify
149	which artist released the album blonde on blonde ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicAlbum ) filter param:id:Entity(org.schema.Music:MusicAlbum) =~ " blonde on blonde " ) => notify
155	which album contains do n't wan na miss a thing by aerosmith ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " aerosmith " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " do n't wan na miss a thing " ) => notify
159	what is the url to taylor swift 's , shake it off ?	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " taylor swift " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " shake it off " ) => notify
162	what album is the song hello by adele in ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " adele " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " hello " ) => notify
163	who sings the song chandelier ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " chandelier " ) => notify
166	which artist released the album watch the throne ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicAlbum ) filter param:id:Entity(org.schema.Music:MusicAlbum) =~ " watch the throne " ) => notify
168	which artists performed the song moulin rouge ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " moulin rouge " ) => notify
169	on which album can i find the song broadway performed by the goo goo dolls ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " goo goo dolls " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " broadway " ) => notify
171	what beatles album is the song i want to hold your hand on ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " beatles " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " i want to hold your hand " ) => notify
176	play me a song from jason mraz 's album know .	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " jason mraz " ^^org.schema.Music:Person and param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " know " ^^org.schema.Music:MusicAlbum => notify
177	i want to hear shape of you .	now => ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " shape of you " => notify
178	can you find a song by whitney houston ?	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " whitney houston " ^^org.schema.Music:Person => notify
179	i 'd like to hear a song in mariah carey 's greatest hits	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " mariah carey " ^^org.schema.Music:Person and param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " greatest hits " ^^org.schema.Music:MusicAlbum => notify
183	what songs are on the beach boys pet sounds album .	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " beach boys " ^^org.schema.Music:Person and param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " pet sounds " ^^org.schema.Music:MusicAlbum => notify
184	what album was the john lennon song imagine on ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " john lennon " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " imagine " ) => notify
190	find the album with wall of death on it .	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " wall of death " ) => notify
191	give me the url to losing my religion .	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " losing my religion " ) => notify
193	what artist performs blue suede shoes ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " blue suede shoes " ) => notify
194	what is the name of a song that johnny cash performs ?	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " johnny cash " ^^org.schema.Music:Person => notify
195	what album contains the song another one bites the dust ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " another one bites the dust " ) => notify
196	what artist sings the song never going back again ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " never going back again " ) => notify
198	who sings carolina in my mind ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " carolina in my mind " ) => notify
199	what paul simon album contains the song i know what i know ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " paul simon " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " i know what i know " ) => notify
1100	search for any songs from the some girls album .	now => ( @org.schema.Music.MusicRecording ) filter param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " some girls " ^^org.schema.Music:MusicAlbum => notify
1101	find me a link for the track oops i did it again .	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " oops i did it again " ) => notify
1103	tell me which album stairway to heaven is from .	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " stairway to heaven " ^^org.schema.Music:MusicAlbum ) => notify
1107	what album is sweet child of mine on ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " sweet child of mine " ) => notify
1112	what beatles album has lucy in the sky with diamonds on it ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " beatles " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " lucy in the sky with diamonds " ) => notify
1113	who sings every picture tells a story from the album of the same name ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " every picture tells a story " and param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " every picture tells a story " ^^org.schema.Music:MusicAlbum ) => notify
1114	give me a link to all the songs on tapestry by carole king	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " carole king " ^^org.schema.Music:Person and param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " tapestry " ^^org.schema.Music:MusicAlbum ) => notify
1126	find albums with the song you 're the top .	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " you 're the top " ) => notify
20	find me let 's dance by david bowie	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " david bowie " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " let 's dance " => notify
21	find me freedom by george michael	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " george michael " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " freedom " => notify
22	what album by the beatles is come together in ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " beatles " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " come together " ) => notify	now => [ param:inAlbum ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist == " beatles " ^^org.schema.Music:Person and param:id =~ " come together " ) => notify
23	what album by the rolling stones is start me up in ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " rolling stones " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " start me up " ) => notify	now => [ param:inAlbum ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist == " rolling stones " ^^org.schema.Music:Person and param:id =~ " start me up " ) => notify
24	find me pretty vacant by the sex pistols	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " sex pistols " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " pretty vacant " => notify
25	find the james taylor album that has the song copperline on it	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " james taylor " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " copperline " ) => notify
27	find me alanis morrisette 's first lp	now => ( sort param:datePublished:Date asc of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " alanis morrisette " ^^org.schema.Music:Person ) ) [ 1 ] => notify
28	list the songs on beatle 's white album	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " beatle " ^^org.schema.Music:Person and param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " white album " ^^org.schema.Music:MusicAlbum => notify
29	find padlock by gwen guthrie	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " gwen guthrie " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " padlock " => notify
216	who is the original singer of impossible ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( sort param:datePublished:Date asc of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " impossible " ) ) [ 1 ] ) => notify
220	find the song titled i want it that way ' by the backstreet boys .	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " backstreet boys " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " i want it that way " => notify
221	find all songs by micheal jackson .	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " micheal jackson " ^^org.schema.Music:Person => notify
222	search for all songs with the word dance in the title .	now => ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " dance " => notify
223	find all songs from the album the eminem show by eminem .	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " eminem " ^^org.schema.Music:Person and param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " eminem show " ^^org.schema.Music:MusicAlbum => notify
224	find songs from the album like a virgin by madonna .	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " madonna " ^^org.schema.Music:Person and param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " like a virgin " ^^org.schema.Music:MusicAlbum => notify
225	how many tracks are on the album dark side of the moon ?	now => aggregate count of ( ( @org.schema.Music.MusicRecording ) filter param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " dark side of the moon " ^^org.schema.Music:MusicAlbum ) => notify
226	can you find all songs containing the word mother ?	now => ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " mother " => notify
228	can you find a link for the song algiers by the afghan whigs ?	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " afghan whigs " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " algiers " ) => notify
229	how many total tracks are available from the band rush ?	now => aggregate count of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " rush " ^^org.schema.Music:Person ) => notify
231	i want to hear a song from dark lane demo tapes	now => ( @org.schema.Music.MusicRecording ) filter param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " dark lane demo tapes " ^^org.schema.Music:MusicAlbum => notify
232	put on a song from the heist by mackelmore .	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " mackelmore " ^^org.schema.Music:Person and param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " heist " ^^org.schema.Music:MusicAlbum => notify
233	i 'm in the mood for something from the slim shady lp .	now => ( @org.schema.Music.MusicRecording ) filter param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " slim shady lp " ^^org.schema.Music:MusicAlbum => notify
234	can you find a song from eminem 's kamikaze album ?	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " eminem " ^^org.schema.Music:Person and param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " kamikaze " ^^org.schema.Music:MusicAlbum => notify
237	give me the link to the beatles ' eleanor rigby .	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " beatles " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " eleanor rigby " ) => notify
240	which metallica album is the song outlaw torn from ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " metallica " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " outlaw torn " ) => notify
246	which album was in the end from by linkin park ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " linkin park " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " in the end " ) => notify
247	what is the link to higher by nickelback ?	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " nickelback " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " higher " ) => notify
248	who sang my heart will go on ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " my heart will go on " ) => notify
249	which artist sang temperature ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " temperature " ) => notify
250	find me the album that has the song stupid love and who sang it .	now => [ param:byArtist:Entity(org.schema.Music:Person) , param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " stupid love " ) => notify
251	can you tell me who sang the song born to run and what album it was on ?	now => [ param:byArtist:Entity(org.schema.Music:Person) , param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " born to run " ) => notify
255	who sang the song yeah and what album is it on ?	now => [ param:byArtist:Entity(org.schema.Music:Person) , param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " yeah " ) => notify
256	can you link me to the song ai n't no easy way out and tell me the artist ?	now => [ param:byArtist:Entity(org.schema.Music:Person) , param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " ai n't no easy way out " ) => notify
259	who sang the song barracuda ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " barracuda " ) => notify
260	give me an album with a song with the name sunshine .	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " sunshine " ) => notify
265	pleases search for wonderwall by oasis .	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " oasis " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " wonderwall " => notify
266	get me the url link to sunday morning by no doubt .	now => [ param:url ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist == " no doubt " ^^org.schema.Music:Person and param:id =~ " sunday morning " ) => notify
269	what is the track list for revival by selena gomez ?	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " selena gomez " ^^org.schema.Music:Person and param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " revival " ^^org.schema.Music:MusicAlbum => notify
271	who is the artist of the song bad blood ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " bad blood " ) => notify
272	on what album does boys ii men 's song motownphilly appear ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " boys ii men " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " motownphilly " ) => notify
274	which artist sings black water lilies , and what album is it on ?	now => [ param:byArtist:Entity(org.schema.Music:Person) , param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " black water lilies " ) => notify
279	i need to here the circus left town by eric clapton please link that , thanks ?	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " eric clapton " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " circus left town " ) => notify
280	find the john prine song speed of the sound of lonliness on the german afternoons album .	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " john prine " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " speed of the sound of lonliness " and param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " german afternoons " ^^org.schema.Music:MusicAlbum => notify
281	find the led zeppelin song whole lotta love .	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist == " led zeppelin " ^^org.schema.Music:Person and param:id =~ " whole lotta love " => notify
282	find the song one on the album named achtung baby .	now => ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " one " and param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " achtung baby " ^^org.schema.Music:MusicAlbum => notify
283	find the beatles song hey jude .	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " beatles " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " hey jude " => notify
284	play madonna 's vogue from the i 'm breathless album .	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " madonna " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " vogue " and param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " i 'm breathless " ^^org.schema.Music:MusicAlbum => notify
285	who sings the song called , have you ever seen the rain ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " have you ever seen the rain " ) => notify
286	in what album is the song fortunate son by creedence clearwater revival in ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " creedence clearwater revival " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " fortunate son " ) => notify
287	in what album is the song , green river by creedence clearwater revival ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " creedence clearwater revival " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " green river " ) => notify
288	who sings the song called long cool woman ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " long cool woman " ) => notify
289	what is the url for the song bad moon rising by creedence clearwater revival ?	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " creedence clearwater revival " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " bad moon rising " ) => notify
290	which album has the wrecking ball song ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " wrecking ball " ) => notify
291	who sang neon lights ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " neon lights " ) => notify
292	what 's the url for brokenhearted ?	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " brokenhearted " ) => notify
296	on which album can i find the song piano man ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " piano man " ) => notify
2100	which artist sang stairway to heaven	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " stairway to heaven " ) => notify
2101	which album is stairway to heaven on	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " stairway to heaven " ) => notify
2102	what album does we are are the champions appear on	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " we are are the champions " ) => notify
2104	who came out with bohemian rhapsody	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " bohemian rhapsody " ) => notify
2105	what album is the song jailhouse rock on ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " jailhouse rock " ) => notify
2109	which album has ribbon in the sky on it by stevie wonder ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " stevie wonder " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " ribbon in the sky " ) => notify
2111	show me url for the song thriller	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " thriller " ) => notify
2112	what is the album that smells like teen spirit is on ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " smells like teen spirit " ) => notify
2113	what are the songs on the album like a virgin ?	now => ( @org.schema.Music.MusicRecording ) filter param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " like a virgin " ^^org.schema.Music:MusicAlbum => notify
2120	who sang girls just want to have fun ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " girls just want to have fun " ) => notify
2121	what album was take it to the limit by the eagles on ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " eagles " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " take it to the limit " ) => notify
2123	what album was running down a dream by tom petty on ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " tom petty " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " running down a dream " ) => notify
2124	what album was sunday bloody sunday on ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " sunday bloody sunday " ) => notify
2125	what was ariana grande 's album that has the song bang bang ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " ariana grande " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " bang bang " ) => notify
2126	who sung the song nevermind that is on the album of the same name ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " nevermind " and param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " nevermind " ^^org.schema.Music:MusicAlbum ) => notify
2129	single ladies by beyonce was on what album ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " beyonce " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " single ladies " ) => notify
2130	what is the name of the album that the song bad to the bone is on ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " bad to the bone " ) => notify
2131	please give me the link to i 'm a believer .	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " i 'm a believer " ) => notify
2132	who performed the song yellow ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " yellow " ) => notify
2133	who performed the song rock lobster ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " rock lobster " ) => notify
2135	give me a link to the song scavenger of death .	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " scavenger of death " ) => notify
2136	what 's the name of the album with the song helter skelter on it ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " helter skelter " ) => notify
2138	tell me all the tracks on the morbid tales mini-lp .	now => ( @org.schema.Music.MusicRecording ) filter param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " morbid tales mini-lp " ^^org.schema.Music:MusicAlbum => notify
2139	search for all songs by farrah abraham .	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " farrah abraham " ^^org.schema.Music:Person => notify
2140	who sings the song black magic woman ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " black magic woman " ) => notify
2141	what album is the song the chain on ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " chain " ) => notify
2142	what artist sang the song rooster ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " rooster " ) => notify
2143	what is the name of the album containing the song copperline ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " copperline " ) => notify
2144	who sang the song rape me , and what album is it on ?	now => [ param:byArtist:Entity(org.schema.Music:Person) , param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " rape me " ) => notify
0	i would like to be shown songs in the pop genre .	now => ( @org.schema.Music.MusicRecording ) filter param:genre:Array(String) contains~ " pop " => notify
1	i would like the link to take a listen to the song called drown .	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " drown " ) => notify
2	i want to hear music from the artist lecrae .	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " lecrae " ^^org.schema.Music:Person => notify
3	how long does the song drown play for ?	now => [ param:duration:Measure(ms) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " drown " ) => notify
4	what album is the song drown by lecrae on ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " lecrae " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " drown " ) => notify
6	what band recorded the album heima ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicAlbum ) filter param:id:Entity(org.schema.Music:MusicAlbum) =~ " heima " ) => notify
7	what is the first album recorded by sigur ros ?	now => ( sort param:datePublished:Date asc of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " sigur ros " ^^org.schema.Music:Person ) ) [ 1 ] => notify
8	when did sigur ros release their first album ?	now => [ param:datePublished:Date ] of ( ( sort param:datePublished:Date asc of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " sigur ros " ^^org.schema.Music:Person ) ) [ 1 ] ) => notify
9	what language is the album heima recorded in ?	now => [ param:inLanguage:Entity(tt:iso_lang_code) ] of ( ( @org.schema.Music.MusicAlbum ) filter param:id:Entity(org.schema.Music:MusicAlbum) =~ " heima " ) => notify
10	who is the artist who wrote this song ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( @org.schema.Music.MusicRecording ) => notify
11	how long is this song ?	now => [ param:duration:Measure(ms) ] of ( @org.schema.Music.MusicRecording ) => notify
12	what language is this song written in ?	now => [ param:inLanguage:Entity(tt:iso_lang_code) ] of ( @org.schema.Music.MusicRecording ) => notify
13	when was this song published ?	now => [ param:datePublished:Date ] of ( @org.schema.Music.MusicRecording ) => notify
14	what genre of music does this song belong to ?	now => [ param:genre:Array(String) ] of ( @org.schema.Music.MusicRecording ) => notify
0	i would like to be shown songs in the pop genre .	now => ( @org.schema.Music.MusicRecording ) filter param:genre:Array(String) contains~ " pop " => notify
1	i would like the link to take a listen to the song called drown .	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " drown " ) => notify
2	i want to hear music from the artist lecrae .	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " lecrae " ^^org.schema.Music:Person => notify
3	how long does the song drown play for ?	now => [ param:duration:Measure(ms) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " drown " ) => notify
4	what album is the song drown by lecrae on ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " lecrae " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " drown " ) => notify
6	what band recorded the album heima ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicAlbum ) filter param:id:Entity(org.schema.Music:MusicAlbum) =~ " heima " ) => notify
7	what is the first album recorded by sigur ros ?	now => ( sort param:datePublished:Date asc of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " sigur ros " ^^org.schema.Music:Person ) ) [ 1 ] => notify
8	when did sigur ros release their first album ?	now => [ param:datePublished:Date ] of ( ( sort param:datePublished:Date asc of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " sigur ros " ^^org.schema.Music:Person ) ) [ 1 ] ) => notify
9	what language is the album heima recorded in ?	now => [ param:inLanguage:Entity(tt:iso_lang_code) ] of ( ( @org.schema.Music.MusicAlbum ) filter param:id:Entity(org.schema.Music:MusicAlbum) =~ " heima " ) => notify
10	who is the artist who wrote this song ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( @org.schema.Music.MusicRecording ) => notify
11	how long is this song ?	now => [ param:duration:Measure(ms) ] of ( @org.schema.Music.MusicRecording ) => notify
12	what language is this song written in ?	now => [ param:inLanguage:Entity(tt:iso_lang_code) ] of ( @org.schema.Music.MusicRecording ) => notify
13	when was this song published ?	now => [ param:datePublished:Date ] of ( @org.schema.Music.MusicRecording ) => notify
14	what genre of music does this song belong to ?	now => [ param:genre:Array(String) ] of ( @org.schema.Music.MusicRecording ) => notify
16	what was the last album by micheal jackson	now => ( sort param:datePublished:Date desc of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " micheal jackson " ^^org.schema.Music:Person ) ) [ 1 ] => notify
19	find all albums by elvis .	now => ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " elvis " ^^org.schema.Music:Person => notify
21	what was the name of lady gaga 's first album ?	now => ( sort param:datePublished:Date asc of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " lady gaga " ^^org.schema.Music:Person ) ) [ 1 ] => notify
22	how long is the queen track 'you 're my best friend ' ?	now => [ param:duration:Measure(ms) ] of ( ( @org.schema.Music.MusicRecording ) filter param:genre:Array(String) contains~ " queen " and param:id:Entity(org.schema.Music:MusicRecording) =~ " 'you 're my best friend " ) => notify
23	what genre is queens of the stone age ?	now => [ param:genre:Array(String) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " queens of the stone age " ) => notify
25	find me a spanish language album by enrique iglesias ?	now => ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " enrique iglesias " ^^org.schema.Music:Person and param:inLanguage:Entity(tt:iso_lang_code) == " spanish " ^^tt:iso_lang_code => notify
26	what is the name of the taylor swift album that was published in july ?	now => ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " taylor swift " ^^org.schema.Music:Person and param:datePublished:Date <= new Date ( , 7 , , ) + 1 unit:mon and param:datePublished:Date >= new Date ( , 7 , , ) => notify
27	what is the number of tracks on the latest taylor swift album ?	now => [ param:numTracks:Number ] of ( ( sort param:datePublished:Date desc of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " taylor swift " ^^org.schema.Music:Person ) ) [ 1 ] ) => notify
28	what is the name of the dr. dre album with the most tracks on it ?	now => ( sort param:numTracks:Number desc of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " dr. dre " ^^org.schema.Music:Person ) ) [ 1 ] => notify
29	on what date was the latest jay-z album published ?	now => [ param:datePublished:Date ] of ( ( sort param:datePublished:Date desc of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " jay-z " ^^org.schema.Music:Person ) ) [ 1 ] ) => notify
30	when was the song sam stone published ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " sam stone " ) => notify
31	how many tracks are on the pet sounds album ?	now => [ param:numTracks:Number ] of ( ( @org.schema.Music.MusicAlbum ) filter param:id:Entity(org.schema.Music:MusicAlbum) =~ " pet sounds " ) => notify
32	what is the genre of the song sweet child o ' mine ?	now => [ param:genre:Array(String) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " sweet child o ' mine " ) => notify
33	what is the genre of the album called carrie & lowell ?	now => [ param:genre:Array(String) ] of ( ( @org.schema.Music.MusicAlbum ) filter param:id:Entity(org.schema.Music:MusicAlbum) =~ " carrie & lowell " ) => notify
34	how many tracks are on the album tea for the tillerman ?	now => [ param:numTracks:Number ] of ( ( @org.schema.Music.MusicAlbum ) filter param:id:Entity(org.schema.Music:MusicAlbum) =~ " tea for the tillerman " ) => notify
35	find me the the album that has smells like teen spirit on it .	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " smells like teen spirit " ) => notify
36	search for death metal songs over 10 minutes long .	now => ( @org.schema.Music.MusicRecording ) filter param:duration:Measure(ms) >= 10 unit:min and param:genre:Array(String) contains~ " death metal " => notify
37	tell me how many tracks there are on the led zeppelin ii album .	now => [ param:numTracks:Number ] of ( ( @org.schema.Music.MusicAlbum ) filter param:id:Entity(org.schema.Music:MusicAlbum) =~ " led zeppelin ii " ) => notify
38	list all psychedelic songs published on DATE_0 .	now => ( @org.schema.Music.MusicRecording ) filter param:datePublished:Date == DATE_0 and param:genre:Array(String) contains~ " psychedelic " => notify
39	tell me the names of all albums released by david cassidy .	now => ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " david cassidy " ^^org.schema.Music:Person => notify
41	find the longest song by beyonce .	now => ( sort param:duration:Measure(ms) desc of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " beyonce " ^^org.schema.Music:Person ) ) [ 1 ] => notify
42	which album is enter sandman on ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " enter sandman " ) => notify
43	show me the artist that sings billie jean .	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " billie jean " ) => notify
44	how long is the song rock and roll all nite ?	now => [ param:duration:Measure(ms) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " rock and roll all nite " ) => notify
45	what was the name of the second album by the black crowes ?	now => ( sort param:datePublished:Date asc of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " black crowes " ^^org.schema.Music:Person ) ) [ 2 ] => notify
46	how many albums have new order released ?	now => aggregate count of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " new order " ^^org.schema.Music:Person ) => notify
47	how many tracks are on the the cure 's latest album ?	now => [ param:numTracks:Number ] of ( ( sort param:datePublished:Date desc of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " cure " ^^org.schema.Music:Person ) ) [ 1 ] ) => notify
50	what year was houndog released ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " houndog " ) => notify
51	which album is bohemian rhapsody on ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " bohemian rhapsody " ) => notify
52	how long is green onions ?	now => [ param:duration:Measure(ms) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " green onions " ) => notify
54	what album has the most tracks ?	now => ( sort param:numTracks:Number desc of ( @org.schema.Music.MusicAlbum ) ) [ 1 ] => notify
55	what language is sung in fly high ?	now => [ param:inLanguage:Entity(tt:iso_lang_code) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " fly high " ) => notify
56	how many tracks are on taylor swift 's red	now => [ param:numTracks:Number ] of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " taylor swift " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicAlbum) =~ " red " ) => notify
57	how long is never stop by gunfngr ?	now => [ param:duration:Measure(ms) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " gunfngr " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " never stop " ) => notify
58	what is the earliest published song in italian ?	now => ( sort param:datePublished:Date asc of ( ( @org.schema.Music.MusicRecording ) filter param:inLanguage:Entity(tt:iso_lang_code) == " italian " ^^tt:iso_lang_code ) ) [ 1 ] => notify
59	who sang brokenhearted ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " brokenhearted " ) => notify
60	how long is comfortably numb ?	now => [ param:duration:Measure(ms) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " comfortably numb " ) => notify
61	what year did hey jude come out ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " hey jude " ) => notify
62	send me the link to california love , please .	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " california love " ) => notify
63	what album was party rock anthem on ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " party rock anthem " ) => notify
64	what genre of music is owner of a lonely heart ?	now => [ param:genre:Array(String) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " owner of a lonely heart " ) => notify
65	could you find a song that is in spanish and of the genre punk rock ?	now => ( @org.schema.Music.MusicRecording ) filter param:genre:Array(String) contains~ " punk rock " and param:inLanguage:Entity(tt:iso_lang_code) == " spanish " ^^tt:iso_lang_code => notify
66	could you find a song before NUMBER_0 by the beatles ?	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " beatles " ^^org.schema.Music:Person and param:datePublished:Date <= new Date ( NUMBER_0 , , , ) => notify
68	could you provide a link to the song named little red corvette ?	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " little red corvette " ) => notify
70	which song in the database has the shortest length ?	now => ( sort param:duration:Measure(ms) asc of ( @org.schema.Music.MusicRecording ) ) [ 1 ] => notify
71	what year was sweet home alabama published ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " sweet home alabama " ) => notify
72	what was madonna 's first album titled ?	now => ( sort param:datePublished:Date asc of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " madonna " ^^org.schema.Music:Person ) ) [ 1 ] => notify
74	what is the genre of the song video killed the radio star ?	now => [ param:genre:Array(String) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " video killed the radio star " ) => notify
76	who sings on the saturday night fever soundtrack ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " saturday night fever " ) => notify
77	how many albums has madonna made ?	now => aggregate count of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " madonna " ^^org.schema.Music:Person ) => notify
79	who sang heart of glass ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " heart of glass " ) => notify
80	can you give me a list of songs that were published in english during DATE_0 ?	now => ( @org.schema.Music.MusicRecording ) filter param:datePublished:Date <= DATE_0 + 1 unit:mon and param:datePublished:Date >= DATE_0 and param:inLanguage:Entity(tt:iso_lang_code) == " english " ^^tt:iso_lang_code => notify
81	on what album is the song bridge over troubled water found on ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " bridge over troubled water " ) => notify
82	how many tracks are on the album smile ?	now => [ param:numTracks:Number ] of ( ( @org.schema.Music.MusicAlbum ) filter param:id:Entity(org.schema.Music:MusicAlbum) =~ " smile " ) => notify
83	how many songs that are exactly 4 minutes long have been released by madonna ?	now => aggregate count of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " madonna " ^^org.schema.Music:Person and param:duration:Measure(ms) == 4 unit:min ) => notify
84	please list the songs that eminem has released in the pop genre .	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " eminem " ^^org.schema.Music:Person and param:genre:Array(String) contains~ " pop " => notify
85	what is the duration of the track born to run ?	now => [ param:duration:Measure(ms) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " born to run " ) => notify
86	what is the genre of the album led zeppelin iv ?	now => [ param:genre:Array(String) ] of ( ( @org.schema.Music.MusicAlbum ) filter param:id:Entity(org.schema.Music:MusicAlbum) =~ " led zeppelin iv " ) => notify
87	tell me the artist of the track named paranoid android ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " paranoid android " ) => notify
89	which album is the track brain damage from ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " brain damage " ) => notify
90	what genre is this album from	now => [ param:genre:Array(String) ] of ( @org.schema.Music.MusicAlbum ) => notify
91	how many tracks ar on this album	now => [ param:numTracks:Number ] of ( @org.schema.Music.MusicAlbum ) => notify
92	what year was this song published	now => [ param:datePublished:Date ] of ( @org.schema.Music.MusicRecording ) => notify
93	who sings this song	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( @org.schema.Music.MusicRecording ) => notify
95	who wrote the song let it be ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " let it be " ) => notify
96	when did ringo starr release his first solo album ?	now => [ param:datePublished:Date ] of ( ( sort param:datePublished:Date asc of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " ringo starr " ^^org.schema.Music:Person ) ) [ 1 ] ) => notify
97	what genre is the song back in black ?	now => [ param:genre:Array(String) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " back in black " ) => notify
98	how many songs does the white album have ?	now => [ param:numTracks:Number ] of ( ( @org.schema.Music.MusicAlbum ) filter param:id:Entity(org.schema.Music:MusicAlbum) =~ " white " ) => notify
99	give me a link to the song hooked on a feeling .	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " hooked on a feeling " ) => notify
100	what date was nirvana 's nevermind album released on the market ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " nirvana " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicAlbum) =~ " nevermind " ) => notify
101	how many albums has shakira recorded in spanish ?	now => aggregate count of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " shakira " ^^org.schema.Music:Person and param:inLanguage:Entity(tt:iso_lang_code) == " spanish " ^^tt:iso_lang_code ) => notify
104	what is the first studio album released by 9 inch nails ?	now => ( ( sort param:datePublished:Date asc of ( @org.schema.Music.MusicAlbum ) ) filter param:byArtist:Entity(org.schema.Music:Person) == " 9 inch nails " ^^org.schema.Music:Person ) [ 1 ] => notify
105	find me a country album that was released in NUMBER_0	now => ( @org.schema.Music.MusicAlbum ) filter param:datePublished:Date <= new Date ( NUMBER_0 , , , ) + 1 unit:year and param:datePublished:Date >= new Date ( NUMBER_0 , , , ) and param:genre:Array(String) contains~ " country " => notify
106	what is the name of the first led zeppelin album ?	now => ( sort param:datePublished:Date asc of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " led zeppelin " ^^org.schema.Music:Person ) ) [ 1 ] => notify
107	what is the name of the artist who sang my way ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " my way " ) => notify
108	how long is dogs by pink floyd ?	now => [ param:duration:Measure(ms) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " pink floyd " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " dogs " ) => notify
109	find me tempted by squeeze	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " squeeze " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " tempted " => notify
112	has korn ever came out with an album with NUMBER_0 songs ?	now => ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " korn " ^^org.schema.Music:Person and param:numTracks:Number == NUMBER_0 => notify
113	what is the name of the song that billy joel released on DATE_0 ?	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " billy joel " ^^org.schema.Music:Person and param:datePublished:Date == DATE_0 => notify
114	what bands were on the family values album ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicAlbum ) filter param:id:Entity(org.schema.Music:MusicAlbum) =~ " family values " ) => notify
115	what artist sings the song jessie 's girl ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " jessie 's girl " ) => notify
116	when was heart of glass published ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " heart of glass " ) => notify
117	what system of a down album contains the song sugar ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " system of a down " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " sugar " ) => notify
118	what is the length of money , by pink floyd ?	now => [ param:duration:Measure(ms) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " pink floyd " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " money " ) => notify
119	how many tracks does the beatle 's white album have ?	now => [ param:numTracks:Number ] of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " beatle " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicAlbum) =~ " white " ) => notify
120	who sings the song blinding lights ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " blinding lights " ) => notify
121	what is the name of taylor swift 's last album .	now => ( sort param:datePublished:Date desc of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " taylor swift " ^^org.schema.Music:Person ) ) [ 1 ] => notify
122	when was billie jean published ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " billie jean " ) => notify
123	how long is master of puppets ?	now => [ param:duration:Measure(ms) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " master of puppets " ) => notify
124	how many songs are on purple rain ?	now => [ param:numTracks:Number ] of ( ( @org.schema.Music.MusicAlbum ) filter param:id:Entity(org.schema.Music:MusicAlbum) =~ " purple rain " ) => notify
125	find a song by shania twain	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " shania twain " ^^org.schema.Music:Person => notify
126	i want a song that is over 10 minutes	now => ( @org.schema.Music.MusicRecording ) filter param:duration:Measure(ms) >= 10 unit:min => notify
127	i 'm looking for a song off the album the wall	now => ( @org.schema.Music.MusicRecording ) filter param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " wall " ^^org.schema.Music:MusicAlbum => notify
128	locate some power metal in spanish for me	now => ( @org.schema.Music.MusicRecording ) filter param:genre:Array(String) contains~ " power metal " and param:inLanguage:Entity(tt:iso_lang_code) == " spanish " ^^tt:iso_lang_code => notify
129	find a lady gaga album with 9 tracks	now => ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " lady gaga " ^^org.schema.Music:Person and param:numTracks:Number == 9 => notify
130	who sings the song all of me ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " all of me " ) => notify
132	how many tracks are on the album tapestry ?	now => [ param:numTracks:Number ] of ( ( @org.schema.Music.MusicAlbum ) filter param:id:Entity(org.schema.Music:MusicAlbum) =~ " tapestry " ) => notify
133	show me the url for somebody you loved .	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " somebody you loved " ) => notify
134	who first recorded sweet child of mine ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( sort param:datePublished:Date asc of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " sweet child of mine " ) ) [ 1 ] ) => notify
135	could you find me the english version of how deep is your love ?	now => ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " how deep is your love " and param:inLanguage:Entity(tt:iso_lang_code) == " english " ^^tt:iso_lang_code => notify
137	find me songs in the rock genre published before NUMBER_0 ?	now => ( @org.schema.Music.MusicRecording ) filter param:datePublished:Date <= new Date ( NUMBER_0 , , , ) and param:genre:Array(String) contains~ " rock " => notify
138	show me all songs by aerosmith produced before NUMBER_0 ?	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " aerosmith " ^^org.schema.Music:Person and param:datePublished:Date <= new Date ( NUMBER_0 , , , ) => notify
139	find me blues songs that are over 5 minutes long ?	now => ( @org.schema.Music.MusicRecording ) filter param:duration:Measure(ms) >= 5 unit:min and param:genre:Array(String) contains " blues " => notify
140	what year did oasis release wonderwall ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " oasis " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " wonderwall " ) => notify
141	how many albums has miley cyrus released ?	now => aggregate count of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " miley cyrus " ^^org.schema.Music:Person ) => notify
142	what is the name of the album that has the gambler by kenny rogers ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " kenny rogers " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " gambler " ) => notify
143	who wrote endless love ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " endless love " ) => notify
144	what genre is new kids on the block ?	now => [ param:genre:Array(String) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " new kids on the block " ) => notify
145	can you tell me from what album did the song billie jean came from and who was the artist ?	now => [ param:byArtist:Entity(org.schema.Music:Person) , param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " billie jean " ) => notify
149	can you tell me how long the song let it go is ?	now => [ param:duration:Measure(ms) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " let it go " ) => notify
150	what songs were on the ziggy stardust album ?	now => ( @org.schema.Music.MusicRecording ) filter param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " ziggy stardust " ^^org.schema.Music:MusicAlbum => notify
151	what songs were shorter than 3 minutes on the album nevermind ?	now => ( @org.schema.Music.MusicRecording ) filter param:duration:Measure(ms) <= 3 unit:min and param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " nevermind " ^^org.schema.Music:MusicAlbum => notify
152	which albums did eric clapton put out in the NUMBER_0 s ?	now => ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " eric clapton " ^^org.schema.Music:Person and param:datePublished:Date <= new Date ( NUMBER_0 , , , ) + 10 unit:year and param:datePublished:Date >= new Date ( NUMBER_0 , , , ) => notify
153	find me german language albums that were released in the year NUMBER_0 .	now => ( @org.schema.Music.MusicAlbum ) filter param:datePublished:Date <= new Date ( NUMBER_0 , , , ) + 1 unit:year and param:datePublished:Date >= new Date ( NUMBER_0 , , , ) and param:inLanguage:Entity(tt:iso_lang_code) == " german " ^^tt:iso_lang_code => notify
154	can you get me the names of songs that the grateful dead published in the NUMBER_0 s ?	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " grateful dead " ^^org.schema.Music:Person and param:datePublished:Date <= new Date ( NUMBER_0 , , , ) + 10 unit:year and param:datePublished:Date >= new Date ( NUMBER_0 , , , ) => notify
155	find whitney houston albums .	now => ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " whitney houston " ^^org.schema.Music:Person => notify
157	how many songs are in this album ?	now => [ param:numTracks:Number ] of ( @org.schema.Music.MusicAlbum ) => notify
158	in what language is this album ?	now => [ param:inLanguage:Entity(tt:iso_lang_code) ] of ( @org.schema.Music.MusicAlbum ) => notify
159	when was this album published ?	now => [ param:datePublished:Date ] of ( @org.schema.Music.MusicAlbum ) => notify
161	has pink ever sung country music songs ?	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " pink " ^^org.schema.Music:Person and param:genre:Array(String) contains~ " country " => notify
163	can you tell me the musical genre of doo-wops & hooligans album by bruno mars ?	now => [ param:genre:Array(String) ] of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " bruno mars " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicAlbum) =~ " doo-wops & hooligans " ) => notify
165	who sang we are the champions ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " we are the champions " ) => notify
166	what is the name of the album we are the champions is on ?	now => [ param:inAlbum:Entity(org.schema.Music:MusicAlbum) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " we are the champions " ) => notify
167	what is the date we are the champions was published ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " we are the champions " ) => notify
168	how long is we are the champions ?	now => [ param:duration:Measure(ms) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " we are the champions " ) => notify
169	can i get a link to we are the champions ?	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " we are the champions " ) => notify
170	what 's the name of taylor swift 's new album ?	now => ( ( sort param:datePublished:Date desc of ( @org.schema.Music.MusicAlbum ) ) filter param:byArtist:Entity(org.schema.Music:Person) == " taylor swift " ^^org.schema.Music:Person ) [ 1 ] => notify
171	how many songs are on taylor swift 's new album ?	now => [ param:numTracks:Number ] of ( ( ( sort param:datePublished:Date desc of ( @org.schema.Music.MusicAlbum ) ) filter param:byArtist:Entity(org.schema.Music:Person) == " taylor swift " ^^org.schema.Music:Person ) [ 1 ] ) => notify
172	when was taylor swift 's new album released ?	now => [ param:datePublished:Date ] of ( ( ( sort param:datePublished:Date desc of ( @org.schema.Music.MusicAlbum ) ) filter param:byArtist:Entity(org.schema.Music:Person) == " taylor swift " ^^org.schema.Music:Person ) [ 1 ] ) => notify
173	what genre is taylor swift 's new album ?	now => [ param:genre:Array(String) ] of ( ( ( sort param:datePublished:Date desc of ( @org.schema.Music.MusicAlbum ) ) filter param:byArtist:Entity(org.schema.Music:Person) == " taylor swift " ^^org.schema.Music:Person ) [ 1 ] ) => notify
174	how many albums has taylor swift released ?	now => aggregate count of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " taylor swift " ^^org.schema.Music:Person ) => notify
175	what 's the name of the longest song ?	now => ( sort param:duration:Measure(ms) desc of ( @org.schema.Music.MusicRecording ) ) [ 1 ] => notify
176	what 's the url of without me ?	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " without me " ) => notify
177	how many tracks does the eminem show have ?	now => [ param:numTracks:Number ] of ( ( @org.schema.Music.MusicAlbum ) filter param:id:Entity(org.schema.Music:MusicAlbum) =~ " eminem show " ) => notify
178	what is the name of the national anthem song ?	now => ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " national anthem " => notify
179	what date was britney spears ' first album released ?	now => [ param:datePublished:Date ] of ( ( sort param:datePublished:Date asc of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " britney spears " ^^org.schema.Music:Person ) ) [ 1 ] ) => notify
180	i 'm looking for songs in turkish that are under 2 minutes long .	now => ( @org.schema.Music.MusicRecording ) filter param:duration:Measure(ms) <= 2 unit:min and param:inLanguage:Entity(tt:iso_lang_code) == " turkish " ^^tt:iso_lang_code => notify
181	find songs that were published yesterday .	now => ( @org.schema.Music.MusicRecording ) filter param:datePublished:Date == start_of unit:day - 1 unit:day => notify
182	i need to listen to sour candy by lady gaga .	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " lady gaga " ^^org.schema.Music:Person and param:id:Entity(org.schema.Music:MusicRecording) =~ " sour candy " => notify
183	i 'm in the mood for rap tunes .	now => ( @org.schema.Music.MusicRecording ) filter param:genre:Array(String) contains~ " rap " => notify
184	can you put on songs in mandarin ?	now => ( @org.schema.Music.MusicRecording ) filter param:inLanguage:Entity(tt:iso_lang_code) == " mandarin " ^^tt:iso_lang_code => notify
185	find a song with the artist taylor swift .	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " taylor swift " ^^org.schema.Music:Person => notify
186	how many tracks are on this album ?	now => [ param:numTracks:Number ] of ( @org.schema.Music.MusicAlbum ) => notify
187	what year was this album published ?	now => [ param:datePublished:Date ] of ( @org.schema.Music.MusicAlbum ) => notify
189	how long is this song ?	now => [ param:duration:Measure(ms) ] of ( @org.schema.Music.MusicRecording ) => notify
190	what was the name of metallica 's first album ?	now => ( sort param:datePublished:Date asc of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " metallica " ^^org.schema.Music:Person ) ) [ 1 ] => notify
191	how many songs are on the beatles first album ?	now => [ param:numTracks:Number ] of ( ( sort param:datePublished:Date asc of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " beatles " ^^org.schema.Music:Person ) ) [ 1 ] ) => notify
193	how long is the song hotel california ?	now => [ param:duration:Measure(ms) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " hotel california " ) => notify
194	how many songs are on the first rush album ?	now => [ param:numTracks:Number ] of ( ( sort param:datePublished:Date asc of ( ( @org.schema.Music.MusicAlbum ) filter param:byArtist:Entity(org.schema.Music:Person) == " rush " ^^org.schema.Music:Person ) ) [ 1 ] ) => notify
195	find a song by billy joel	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " billy joel " ^^org.schema.Music:Person => notify
196	play a song by bruce springsteen from the album nebraska	now => ( @org.schema.Music.MusicRecording ) filter param:byArtist:Entity(org.schema.Music:Person) == " bruce springsteen " ^^org.schema.Music:Person and param:inAlbum:Entity(org.schema.Music:MusicAlbum) == " nebraska " ^^org.schema.Music:MusicAlbum => notify
197	show a song longer than 8 minutes	now => ( @org.schema.Music.MusicRecording ) filter param:duration:Measure(ms) >= 8 unit:min => notify
198	how many tracks are on the album the blueprint ?	now => [ param:numTracks:Number ] of ( ( @org.schema.Music.MusicAlbum ) filter param:id:Entity(org.schema.Music:MusicAlbum) =~ " blueprint " ) => notify
199	who sang bad blood ?	now => [ param:byArtist:Entity(org.schema.Music:Person) ] of ( ( @org.schema.Music.MusicRecording ) filter param:id:Entity(org.schema.Music:MusicRecording) =~ " bad blood " ) => notify
