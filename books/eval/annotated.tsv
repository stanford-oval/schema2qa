0	who wrote the good earth ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " good earth " ) => notify
2	what awards did the good earth win ?	now => [ param:award:Array(String) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " good earth " ) => notify
3	how many pages are in gone with the wind ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " gone with the wind " ) => notify
4	what language was the gulag archipelago written in ?	now => [ param:inLanguage:Entity(tt:iso_lang_code) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " gulag archipelago " ) => notify	now => [ param:inLanguage ] of ( ( @org.schema.Book.Book ) filter param:id =~ " gulag archipelago " ) => notify
5	i 'm looking for 1 st edition books written in romanian .	now => ( @org.schema.Book.Book ) filter param:bookEdition:String =~ " 1 st edition " and param:inLanguage:Entity(tt:iso_lang_code) == " romanian " ^^tt:iso_lang_code => notify
6	find me books that were rated 5 and that have over NUMBER_0 ratings .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingCount >= NUMBER_0 and param:aggregateRating.ratingValue == 5 => notify
7	i 'm looking for paperback books written in mandarin .	now => ( @org.schema.Book.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback and param:inLanguage:Entity(tt:iso_lang_code) == " mandarin " ^^tt:iso_lang_code => notify
8	i 'm interested in books with less than NUMBER_0 pages that are written in indonesian .	now => ( @org.schema.Book.Book ) filter param:inLanguage:Entity(tt:iso_lang_code) == " indonesian " ^^tt:iso_lang_code and param:numberOfPages:Number <= NUMBER_0 => notify
9	find me books written by elie wiesel .	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " elie wiesel " ^^org.schema.Book:Person => notify
10	can you help me find ernest hemingway 's a call to arms ?	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " ernest hemingway " ^^org.schema.Book:Person and param:id:Entity(org.schema.Book:Book) =~ " a call to arms " => notify
12	can you direct me to the 4 th edition of war and peace ?	now => ( @org.schema.Book.Book ) filter param:bookEdition:String =~ " 4 th edition " and param:id:Entity(org.schema.Book:Book) =~ " war and peace " => notify
13	can you give mt the book title that william faulkner won the noble prize for ?	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " william faulkner " ^^org.schema.Book:Person and param:award:Array(String) contains~ " noble prize " => notify
14	can you give me all books that have more than NUMBER_0 pages ?	now => ( @org.schema.Book.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
15	i am looking for french language books that have won the pulitzer prize .	now => ( @org.schema.Book.Book ) filter param:award:Array(String) contains~ " pulitzer prize " and param:inLanguage:Entity(tt:iso_lang_code) == " french " ^^tt:iso_lang_code => notify	now => ( @org.schema.Book.Book ) filter param:award:Array(String) contains~ " pulitzer " and param:inLanguage:Entity(tt:iso_lang_code) == " french " ^^tt:iso_lang_code => notify
16	can i see a list of all books written by stephen king that have a rating of 4 or higher ?	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number >= 4 and param:author:Entity(org.schema.Book:Person) == " stephen king " ^^org.schema.Book:Person => notify
17	could you provide me with a list of all books written in english that have exactly NUMBER_0 pages ?	now => ( @org.schema.Book.Book ) filter param:inLanguage:Entity(tt:iso_lang_code) == " english " ^^tt:iso_lang_code and param:numberOfPages:Number == NUMBER_0 => notify
28	is there an audio version of the catcher in the rye ?	now => ( @org.schema.Book.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:AudiobookFormat and param:id:Entity(org.schema.Book:Book) =~ " catcher in the rye " => notify
29	is there a king james version of the bible written in spanish ?	now => ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " king james version of the bible " and param:inLanguage:Entity(tt:iso_lang_code) == " spanish " ^^tt:iso_lang_code => notify
31	who wrote to kill a mockingbird ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " to kill a mockingbird " ) => notify
32	what edition of catch-22 is being printed now ?	now => [ param:bookEdition:String ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " catch-22 " ) => notify
33	what james clavell novel has the most reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " james clavell " ^^org.schema.Book:Person ) ) [ 1 ] => notify
34	how many pages are in the longest book written by diana gabaldon ?	now => [ param:numberOfPages:Number ] of ( ( sort param:numberOfPages:Number desc of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " diana gabaldon " ^^org.schema.Book:Person ) ) [ 1 ] ) => notify
35	would you please find books with no more than NUMBER_0 pages written by stephen king ?	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " stephen king " ^^org.schema.Book:Person and param:numberOfPages:Number <= NUMBER_0 => notify
36	how many books have an overall rating of 3 or higher and were authored by mary higgins clark ?	now => aggregate count of ( ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number >= 3 and param:author:Entity(org.schema.Book:Person) == " mary higgins clark " ^^org.schema.Book:Person ) => notify
37	in what languages has the book presumed innocent been published ?	now => [ param:inLanguage:Entity(tt:iso_lang_code) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " presumed innocent " ) => notify
38	what number of audiobooks have greater than NUMBER_0 total reviews ?	now => aggregate count of ( ( @org.schema.Book.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:AudiobookFormat ) => notify
39	what are the isbn numbers of the top five best-reviewed newbery award winning books ?	now => [ param:isbn:String ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Book.Book ) filter param:award:Array(String) contains~ " newbery " ) ) [ 1 : 5 ] ) => notify
40	give me a list of books by patricia cornwell .	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " patricia cornwell " ^^org.schema.Book:Person => notify
41	find books that are more than NUMBER_0 pages by stephen king .	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " stephen king " ^^org.schema.Book:Person and param:numberOfPages:Number >= NUMBER_0 => notify
42	give me books that have won the newberry award .	now => ( @org.schema.Book.Book ) filter param:award:Array(String) contains~ " newberry " => notify
43	find books by jodi picoult that have 10 or more reviews .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.reviewCount:Number >= 10 and param:author:Entity(org.schema.Book:Person) == " jodi picoult " ^^org.schema.Book:Person => notify
44	find the dilemma by b.a. paris .	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " b.a. paris " ^^org.schema.Book:Person and param:id:Entity(org.schema.Book:Book) =~ " dilemma " => notify
45	find me a book by james patterson ?	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " james patterson " ^^org.schema.Book:Person => notify
46	show me a book with at least two awards .	now => ( @org.schema.Book.Book ) filter count ( param:award:Array(String) ) >= 2 => notify
47	find me a book with no more than NUMBER_0 pages	now => ( @org.schema.Book.Book ) filter param:numberOfPages:Number <= NUMBER_0 => notify
48	find an english book that is first edition .	now => ( @org.schema.Book.Book ) filter param:bookEdition:String =~ " first edition " and param:inLanguage:Entity(tt:iso_lang_code) == " english " ^^tt:iso_lang_code => notify
49	search for a book with a rating of 4 that has no awards .	now => ( @org.schema.Book.Book ) filter count ( param:award:Array(String) ) == 0 and param:aggregateRating.ratingValue:Number == 4 => notify
50	find me a list of books written by michael moorcock .	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " michael moorcock " ^^org.schema.Book:Person => notify
51	show me all books with NUMBER_0 or more reviews and a rating of 5 .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number == 5 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
52	find me any books that have won both booker and pulitzer prizes .	now => ( @org.schema.Book.Book ) filter param:award:Array(String) contains~ " booker " and param:award:Array(String) contains~ " pulitzer prizes " => notify	now => ( @org.schema.Book.Book ) filter param:award:Array(String) contains~ " booker " and param:award:Array(String) contains~ " pulitzer " => notify
53	search for all books with NUMBER_0 pages or more .	now => ( @org.schema.Book.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
54	search for books written by andrzej sapkowski available in english .	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " andrzej sapkowski " ^^org.schema.Book:Person and param:inLanguage:Entity(tt:iso_lang_code) == " english " ^^tt:iso_lang_code => notify
55	what are books with a rating of higher than 4 ?	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number >= 4 => notify
56	what books have more than NUMBER_0 reviews ?	now => ( @org.schema.Book.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
57	which books are 1 st edition and have a rating above 3 ?	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number >= 3 and param:bookEdition:String =~ " 1 st edition " => notify
58	show books with more than NUMBER_0 reviews and more than NUMBER_1 ratings	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_1 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
59	display books in french with a rating of higher than 4	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number >= 4 and param:inLanguage:Entity(tt:iso_lang_code) == " french " ^^tt:iso_lang_code => notify
60	what 's the rating count for this book ?	now => [ param:aggregateRating.ratingCount:Number ] of ( @org.schema.Book.Book ) => notify
61	how many pages does this book have ?	now => [ param:numberOfPages:Number ] of ( @org.schema.Book.Book ) => notify
62	is this book written in french ?	now => ( @org.schema.Book.Book ) filter param:inLanguage:Entity(tt:iso_lang_code) == " french " ^^tt:iso_lang_code => notify
63	who wrote this book ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( @org.schema.Book.Book ) => notify
64	has this book won any notable awards ?	now => [ param:award:Array(String) ] of ( @org.schema.Book.Book ) => notify
65	how many books by poe are rated at least 4 stars ?	now => aggregate count of ( ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number >= 4 and param:author:Entity(org.schema.Book:Person) == " poe " ^^org.schema.Book:Person ) => notify
67	show me all books with at least NUMBER_0 pages and at least a 4 star review	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number >= 4 and param:numberOfPages:Number >= NUMBER_0 => notify
68	which book has won the most awards ?	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @org.schema.Book.Book ) ) ) [ 1 ] => notify
69	what is the highest rated ebook available ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Book.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:EBook ) ) [ 1 ] => notify
70	what is the total number of pages for the first edition of the ballad of songbirds and snakes ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:bookEdition:String =~ " first edition " and param:id:Entity(org.schema.Book:Book) =~ " ballad of songbirds and snakes " ) => notify
71	who is the author of the catcher in the rye ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " catcher in the rye " ) => notify
72	what awards have been won by to kill a mockingbird	now => [ param:award:Array(String) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " to kill a mockingbird " ) => notify
73	what are the awards won by lois lowry 's the giver ?	now => [ param:award:Array(String) ] of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " lois lowry " ^^org.schema.Book:Person and param:id:Entity(org.schema.Book:Book) =~ " giver " ) => notify
74	what is the isbn of the way of kings ?	now => [ param:isbn:String ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " way of kings " ) => notify
75	show me every book written under the pseudonym robert galbraith .	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " robert galbraith " ^^org.schema.Book:Person => notify
76	show me a list of books which have won the nebula award .	now => ( @org.schema.Book.Book ) filter param:award:Array(String) contains~ " nebula " => notify
77	give me a list of books with at least NUMBER_0 reviews with an average rating over NUMBER_1 .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_1 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
78	how many spanish translations of the holy bible are there ?	now => aggregate count of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " holy bible " and param:inLanguage:Entity(tt:iso_lang_code) == " spanish " ^^tt:iso_lang_code ) => notify	now => aggregate count of ( ( @org.schema.Book.Book ) filter param:id =~ " holy bible " and param:inLanguage =~ " spanish " ) => notify
80	find books with over NUMBER_0 pages .	now => ( @org.schema.Book.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
81	show book written in french .	now => ( @org.schema.Book.Book ) filter param:inLanguage:Entity(tt:iso_lang_code) == " french " ^^tt:iso_lang_code => notify
82	find books written by danielle steele .	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " danielle steele " ^^org.schema.Book:Person => notify
83	show all books that have a 4 th edition .	now => ( @org.schema.Book.Book ) filter param:bookEdition:String =~ " 4 th edition " => notify
85	what books by tolstoy are available in ebook format ?	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " tolstoy " ^^org.schema.Book:Person and param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:EBook => notify
86	are there any dickens books that are longer than NUMBER_0 pages ?	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " dickens " ^^org.schema.Book:Person and param:numberOfPages:Number >= NUMBER_0 => notify
87	which books have a rating of 5 and more than NUMBER_0 reviews ?	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number == 5 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
88	are there any award winning books written in icelandic ?	now => ( @org.schema.Book.Book ) filter count ( param:award:Array(String) ) >= 1 and param:inLanguage:Entity(tt:iso_lang_code) == " icelandic " ^^tt:iso_lang_code => notify
89	which books did nabokov write in russian ?	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " nabokov " ^^org.schema.Book:Person and param:inLanguage:Entity(tt:iso_lang_code) == " russian " ^^tt:iso_lang_code => notify
90	what are the hugo winning novels in paperback ?	now => ( @org.schema.Book.Book ) filter param:award:Array(String) contains " hugo " and param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
91	what are novels by joyce carol oates with average rating over 4.0 ?	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number >= 4 and param:author:Entity(org.schema.Book:Person) == " joyce carol oates " ^^org.schema.Book:Person => notify
92	what are novels by janette turner hospital ?	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " janette turner hospital " ^^org.schema.Book:Person => notify
93	what are books by nabokov in russian ?	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " nabokov " ^^org.schema.Book:Person and param:inLanguage:Entity(tt:iso_lang_code) == " russian " ^^tt:iso_lang_code => notify
94	what are books by nabokov in english ?	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " nabokov " ^^org.schema.Book:Person and param:inLanguage:Entity(tt:iso_lang_code) == " english " ^^tt:iso_lang_code => notify
95	find me a book in french with a 2 star rating .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number == 2 and param:inLanguage:Entity(tt:iso_lang_code) == " french " ^^tt:iso_lang_code => notify
96	find me a book in english with a one-star rating .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number == 1 and param:inLanguage:Entity(tt:iso_lang_code) == " english " ^^tt:iso_lang_code => notify
97	find me a book in italian with a 5 star rating .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number == 5 and param:inLanguage:Entity(tt:iso_lang_code) == " italian " ^^tt:iso_lang_code => notify
98	find me a book in german with a 4 star rating .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number == 4 and param:inLanguage:Entity(tt:iso_lang_code) == " german " ^^tt:iso_lang_code => notify
99	find me a book in danish with a 3 star rating .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number == 3 and param:inLanguage:Entity(tt:iso_lang_code) == " danish " ^^tt:iso_lang_code => notify
100	what is the isbn of game of thrones fire and ice ?	now => [ param:isbn:String ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " game of thrones fire and ice " ) => notify
102	how many awards has chinua achebe 's all things apart won ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " chinua achebe " ^^org.schema.Book:Person and param:id:Entity(org.schema.Book:Book) =~ " all things apart " ) ) => notify
103	does NUMBER_0 shades of grey have any hardcover edition ?	now => ( @org.schema.Book.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Hardcover and param:id:Entity(org.schema.Book:Book) =~ " NUMBER_0 shades of grey " => notify
104	is there a chinese release of any of the harry potter books ?	now => ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " harry potter " and param:inLanguage:Entity(tt:iso_lang_code) == " chinese " ^^tt:iso_lang_code => notify
105	what is the isbn for the first edition of jk rowling 's harry potter book ?	now => [ param:isbn:String ] of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " jk rowling " ^^org.schema.Book:Person and param:bookEdition:String =~ " first edition " and param:id:Entity(org.schema.Book:Book) =~ " harry potter " ) => notify
106	how many pages does choke by chuck palahniuk have ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " chuck palahniuk " ^^org.schema.Book:Person and param:id:Entity(org.schema.Book:Book) =~ " choke " ) => notify
107	about how many ratings and review counts does becoming by michelle obama have ?	now => [ param:aggregateRating.ratingCount:Number , param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " michelle obama " ^^org.schema.Book:Person and param:id:Entity(org.schema.Book:Book) =~ " becoming " ) => notify
108	has little fires everywhere by celeste ng won any awards ?	now => [ param:award:Array(String) ] of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " celeste ng " ^^org.schema.Book:Person and param:id:Entity(org.schema.Book:Book) =~ " little fires everywhere " ) => notify
110	find me a book written in french with a rating over 4 .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number >= 4 and param:inLanguage:Entity(tt:iso_lang_code) == " french " ^^tt:iso_lang_code => notify
111	find me a book with over NUMBER_0 reviews that has won awards .	now => ( @org.schema.Book.Book ) filter count ( param:award:Array(String) ) >= 1 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
112	find me a book written in spanish with less than NUMBER_0 pages .	now => ( @org.schema.Book.Book ) filter param:inLanguage:Entity(tt:iso_lang_code) == " spanish " ^^tt:iso_lang_code and param:numberOfPages:Number <= NUMBER_0 => notify
114	find me a book rated higher than 4 with over NUMBER_0 pages .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number >= 4 and param:numberOfPages:Number >= NUMBER_0 => notify
115	did ender 's game win any awards ?	now => [ param:award:Array(String) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " ender 's game " ) => notify
116	what books written in russian have the highest ratings ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Book.Book ) filter param:inLanguage:Entity(tt:iso_lang_code) == " russian " ^^tt:iso_lang_code ) ) [ 1 ] => notify
117	which hardcover book has the fewest pages ?	now => ( sort param:numberOfPages:Number asc of ( ( @org.schema.Book.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Hardcover ) ) [ 1 ] => notify
118	which book by charles dickens has the most reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " charles dickens " ^^org.schema.Book:Person ) ) [ 1 ] => notify
119	how many pages does war and peace have ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " war and peace " ) => notify
120	is there a book that won the nobel prize in russian ?	now => ( @org.schema.Book.Book ) filter param:award:Array(String) contains~ " nobel prize " and param:inLanguage:Entity(tt:iso_lang_code) == " russian " ^^tt:iso_lang_code => notify	now => ( @org.schema.Book.Book ) filter param:award:Array(String) contains~ " nobel " and param:inLanguage:Entity(tt:iso_lang_code) == " russian " ^^tt:iso_lang_code => notify
121	what 's the highest rated book by stephen king ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " stephen king " ^^org.schema.Book:Person ) ) [ 1 ] => notify
122	is the art of war available in paperback ?	now => ( @org.schema.Book.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback and param:id:Entity(org.schema.Book:Book) =~ " art of war " => notify
124	how many maya angelou books have a rating higher than 4.0 ?	now => aggregate count of ( ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number >= 4 and param:author:Entity(org.schema.Book:Person) == " maya angelou " ^^org.schema.Book:Person ) => notify
127	is the games by james patterson available in french ?	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " james patterson " ^^org.schema.Book:Person and param:id:Entity(org.schema.Book:Book) =~ " games " and param:inLanguage:Entity(tt:iso_lang_code) == " french " ^^tt:iso_lang_code => notify
128	what is the isbn of the woman in the window ?	now => [ param:isbn:String ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " woman in the window " ) => notify
129	what is the average rating of the silkworm ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " silkworm " ) => notify
130	who is the author of pet semetary ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " pet semetary " ) => notify
131	how many pages is pet semetary ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " pet semetary " ) => notify
133	which books by stephan king have won awards ?	now => ( @org.schema.Book.Book ) filter count ( param:award:Array(String) ) >= 1 and param:author:Entity(org.schema.Book:Person) == " stephan king " ^^org.schema.Book:Person => notify
142	please give me the book that has received the most awards ?	now => ( sort param:count desc of ( compute count ( param:award ) of ( @org.schema.Book.Book ) ) ) [ 1 ] => notify
147	full name of the author for game of thrones .	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " game of thrones " ) => notify
148	what was the language of the first edition of the stranger ?	now => [ param:inLanguage:Entity(tt:iso_lang_code) ] of ( ( @org.schema.Book.Book ) filter param:bookEdition:String =~ " first edition " and param:id:Entity(org.schema.Book:Book) =~ " stranger " ) => notify	now => [ param:inLanguage ] of ( ( @org.schema.Book.Book ) filter param:bookEdition =~ " first edition " and param:id =~ " stranger " ) => notify
149	list all books written by honore de balzac .	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " honore de balzac " ^^org.schema.Book:Person => notify
150	which lawrence block books have been published in portuguese ?	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " lawrence block " ^^org.schema.Book:Person and param:inLanguage:Entity(tt:iso_lang_code) == " portuguese " ^^tt:iso_lang_code => notify
151	which book has the highest amount of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @org.schema.Book.Book ) ) [ 1 ] => notify
152	which lawrence block book is the highest-rated ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " lawrence block " ^^org.schema.Book:Person ) ) [ 1 ] => notify
153	have any of mikey chlanda 's books come out in hardcover ?	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " mikey chlanda " ^^org.schema.Book:Person and param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Hardcover => notify
158	what is the total number of pages ?	now => [ param:numberOfPages:Number ] of ( @org.schema.Book.Book ) => notify
160	find me catcher in the rye by j. d. salinger	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " j. d. salinger " ^^org.schema.Book:Person and param:id:Entity(org.schema.Book:Book) =~ " catcher in the rye " => notify
161	find me the hardcover format of to kill a mockingbird	now => ( @org.schema.Book.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Hardcover and param:id:Entity(org.schema.Book:Book) =~ " to kill a mockingbird " => notify
162	what is the total number of pages of the book war and peace ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " war and peace " ) => notify
163	who is the author of little women ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " little women " ) => notify
164	find me bleak house by charles dickens	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " charles dickens " ^^org.schema.Book:Person and param:id:Entity(org.schema.Book:Book) =~ " bleak house " => notify
165	i 'd like books that have won the newberry award .	now => ( @org.schema.Book.Book ) filter param:award:Array(String) contains~ " newberry " => notify
166	show me books with a rating of 5 that have more than NUMBER_0 pages .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number == 5 and param:numberOfPages:Number >= NUMBER_0 => notify
167	i 'd like books that have more than NUMBER_0 reviews .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
168	show me books that were written by l. ron hubbard .	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " l. ron hubbard " ^^org.schema.Book:Person => notify
169	i want books written by jeffrey deaver that are available as ebooks .	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " jeffrey deaver " ^^org.schema.Book:Person and param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:EBook => notify
31	which book is over NUMBER_0 pages in length ?	now => ( @org.schema.Book.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
33	what books have an overall rating of 2 stars ?	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
34	what books are written in swahili ?	now => ( @org.schema.Book.Book ) filter param:inLanguage:Entity(tt:iso_lang_code) == " swahili " ^^tt:iso_lang_code => notify
36	which book is credited with having the largest page count in record ?	now => ( sort param:numberOfPages:Number desc of ( @org.schema.Book.Book ) ) [ 1 ] => notify
39	how many awards did the book harry potter and the philosopher 's stone win ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " harry potter and the philosopher 's stone " ) ) => notify
310	which books are written in swedish ?	now => ( @org.schema.Book.Book ) filter param:inLanguage:Entity(tt:iso_lang_code) == " swedish " ^^tt:iso_lang_code => notify
311	which books won the man booker prize ?	now => ( @org.schema.Book.Book ) filter param:award:Array(String) contains~ " man booker prize " => notify
312	which books won a national book award ?	now => ( @org.schema.Book.Book ) filter param:award:Array(String) contains~ " national book " => notify
314	which books have a rating of 3 ?	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
315	which books have won the pulitzer prize ?	now => ( @org.schema.Book.Book ) filter param:award:Array(String) contains~ " pulitzer prize " => notify
316	what books has george r.r. martin written ?	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " george r.r. martin " ^^org.schema.Book:Person => notify
318	which book has isbn code PHONE_NUMBER_0 ?	now => ( @org.schema.Book.Book ) filter param:isbn:String =~ " PHONE_NUMBER_0 " => notify
320	find me books that are rated 2 stars or less	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number <= 2 => notify
322	show me books that have over NUMBER_0 ratings	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
323	i 'm looking for books in the russian language	now => ( @org.schema.Book.Book ) filter param:inLanguage:Entity(tt:iso_lang_code) == " russian " ^^tt:iso_lang_code => notify
324	look for the book the joy luck club for me	now => ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " joy luck club " => notify
325	search for books with over NUMBER_0 pages .	now => ( @org.schema.Book.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
326	search for books by j.k. rowling .	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " j.k. rowling " ^^org.schema.Book:Person => notify
327	look for harry potter books .	now => ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " harry potter " => notify
328	find me books in japanese .	now => ( @org.schema.Book.Book ) filter param:inLanguage:Entity(tt:iso_lang_code) == " japanese " ^^tt:iso_lang_code => notify
329	find me a paperback book .	now => ( @org.schema.Book.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
330	how many reviews have been posted about the stand ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " stand " ) => notify
331	how many books has stephen king written ?	now => aggregate count of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " stephen king " ^^org.schema.Book:Person ) => notify
332	which languages has the hobbit been written in ?	now => [ param:inLanguage:Entity(tt:iso_lang_code) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " hobbit " ) => notify
333	is there a paperback version of black beauty ?	now => ( @org.schema.Book.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback and param:id:Entity(org.schema.Book:Book) =~ " black beauty " => notify
334	how many pages does the stand have ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " stand " ) => notify
337	how many pages is harry potter and the deathly hallows ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " harry potter and the deathly hallows " ) => notify
338	who wrote the handmaid 's tale ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " handmaid 's tale " ) => notify
339	what is the original language of the girl with the dragon tattoo ?	now => [ param:inLanguage:Entity(tt:iso_lang_code) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " girl with the dragon tattoo " ) => notify
340	who wrote wuthering heights ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " wuthering heights " ) => notify
345	i would like a book in language english	now => ( @org.schema.Book.Book ) filter param:inLanguage:Entity(tt:iso_lang_code) == " english " ^^tt:iso_lang_code => notify
347	show me a book with over NUMBER_0 number of pages	now => ( @org.schema.Book.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
348	show me a book with at least 5 awards	now => ( @org.schema.Book.Book ) filter count ( param:award:Array(String) ) >= 5 => notify
349	i need a book with the author j.k. rowling	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " j.k. rowling " ^^org.schema.Book:Person => notify
351	show me books with more than NUMBER_0 pages .	now => ( @org.schema.Book.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
352	list books that have more than NUMBER_0 ratings .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
353	which books have a rating of NUMBER_0 or higher ?	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
354	tell me which books are in spanish .	now => ( @org.schema.Book.Book ) filter param:inLanguage:Entity(tt:iso_lang_code) == " spanish " ^^tt:iso_lang_code => notify
355	is where the crawdads sing available in paperback yet ?	now => ( @org.schema.Book.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback and param:id:Entity(org.schema.Book:Book) =~ " where the crawdads sing " => notify
356	was is the isbn of the di vinci code ?	now => [ param:isbn:String ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " di vinci code " ) => notify
357	who is the author of untamed ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " untamed " ) => notify
358	what awards has the tattooist of auschwitz won ?	now => [ param:award:Array(String) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " tattooist of auschwitz " ) => notify
359	how many pages is lord of the rings ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " lord of the rings " ) => notify
360	who wrote infinite jest ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " infinite jest " ) => notify
361	what is the isbn for infinite jest ?	now => [ param:isbn:String ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " infinite jest " ) => notify
362	how many pages is infinite jest ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " infinite jest " ) => notify
363	what awards were won by infinite jest ?	now => [ param:award:Array(String) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " infinite jest " ) => notify
364	what language was infinite jest published in ?	now => [ param:inLanguage:Entity(tt:iso_lang_code) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " infinite jest " ) => notify
366	search for books by doug adams .	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " doug adams " ^^org.schema.Book:Person => notify
367	i 'd like books with an average rating of 4 or higher .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number >= 4 => notify
368	i 'm interested in finding a book that is over NUMBER_0 pages long .	now => ( @org.schema.Book.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
369	what first edition books can you find ?	now => ( @org.schema.Book.Book ) filter param:bookEdition:String =~ " first edition " => notify
370	name some books by philip roth .	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " philip roth " ^^org.schema.Book:Person => notify
371	which books are NUMBER_0 pages or more ?	now => ( @org.schema.Book.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
372	what is the lowest rated peter straub book ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " peter straub " ^^org.schema.Book:Person ) ) [ 1 ] => notify
373	what formats does the book a home at the end of the world come in ?	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " a home at the end of the world " ) => notify
374	how many reviews has the hotel new hampshire received ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " hotel new hampshire " ) => notify
375	who is the author of the guardians ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " guardians " ) => notify
377	can you tell me the overall rating of john grisham 's book entitled the firm ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " john grisham " ^^org.schema.Book:Person and param:id:Entity(org.schema.Book:Book) =~ " firm " ) => notify
380	could you look for books that are rated 5 ?	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
381	find books that have been awarded the caldecott award	now => ( @org.schema.Book.Book ) filter param:award:Array(String) contains~ " caldecott " => notify
382	i 'm looking for books that are written in french	now => ( @org.schema.Book.Book ) filter param:inLanguage:Entity(tt:iso_lang_code) == " french " ^^tt:iso_lang_code => notify
383	i need you to find me books that have NUMBER_0 reviews or more	now => ( @org.schema.Book.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
384	show me books that have been published in the e-book format	now => ( @org.schema.Book.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:EBook => notify
385	find me all german books	now => ( @org.schema.Book.Book ) filter param:inLanguage:Entity(tt:iso_lang_code) == " german " ^^tt:iso_lang_code => notify
386	show me books written by ernest hemingway	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " ernest hemingway " ^^org.schema.Book:Person => notify
387	find me books with over NUMBER_0 pages	now => ( @org.schema.Book.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
388	search for books with over NUMBER_0 reviews	now => ( @org.schema.Book.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
389	show me all harry potter books	now => ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " harry potter " => notify
390	show me books with at least NUMBER_0 pages	now => ( @org.schema.Book.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
391	what did aristotle write ?	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " aristotle " ^^org.schema.Book:Person => notify
392	which books won a pulitzer ?	now => ( @org.schema.Book.Book ) filter param:award:Array(String) contains~ " pulitzer " => notify
393	is there a book with over NUMBER_0 reviews ?	now => ( @org.schema.Book.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
394	i want books written in latin	now => ( @org.schema.Book.Book ) filter param:inLanguage:Entity(tt:iso_lang_code) == " latin " ^^tt:iso_lang_code => notify
396	who is the author of big summer : a novel ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " big summer : a novel " ) => notify
397	in what formats are the book breath : the new science of a lost art available ?	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " breath : the new science of a lost art " ) => notify
398	what 's the rating of the book carrie by steven king ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " steven king " ^^org.schema.Book:Person and param:id:Entity(org.schema.Book:Book) =~ " carrie " ) => notify
0	find me a caldecott award winner that is in the english language .	now => ( @org.schema.Book.Book ) filter param:award:Array(String) contains~ " caldecott " and param:inLanguage:Entity(tt:iso_lang_code) == " english " ^^tt:iso_lang_code => notify
1	what 's the name of a book from NUMBER_0 that is rated 5 / 5 .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number == 5 and param:datePublished:Date <= new Date ( NUMBER_0 , , , ) + 1 unit:year and param:datePublished:Date >= new Date ( NUMBER_0 , , , ) => notify
2	can you look up a book by danielle steele that came out in the NUMBER_0 s ?	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " danielle steele " ^^org.schema.Book:Person and param:datePublished:Date <= new Date ( NUMBER_0 , , , ) + 10 unit:year and param:datePublished:Date >= new Date ( NUMBER_0 , , , ) => notify
3	what 's a book that is under a NUMBER_0 pages and won at least one award ?	now => ( @org.schema.Book.Book ) filter count ( param:award:Array(String) ) >= 1 and param:numberOfPages:Number <= NUMBER_0 => notify
5	who is the author of the silver chair ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " silver chair " ) => notify
6	how many awards has sex at dawn received ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " sex at dawn " ) ) => notify
7	how many pages does the book shogun have ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " shogun " ) => notify
8	on what date was the order of the phoenix published ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " phoenix " ) => notify
9	who wrote catcher in the rye ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " catcher in the rye " ) => notify
10	who wrote the book lolita ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " lolita " ) => notify
11	what is the rating of the novel flower for algernon ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " flower for algernon " ) => notify
12	how many pages is the lost world ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " lost world " ) => notify
13	what year was eight men out published ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " eight men out " ) => notify
14	how many reviews does harry potter and the sorcerers stone have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " harry potter and the sorcerers stone " ) => notify
15	what is the name of the book ?	now => @org.schema.Book.Book => notify
16	what language is this book in ?	now => [ param:inLanguage:Entity(tt:iso_lang_code) ] of ( @org.schema.Book.Book ) => notify
17	what is the format of the book ?	now => [ param:bookFormat:Enum(AudiobookFormat,EBook,GraphicNovel,Hardcover,Paperback) ] of ( @org.schema.Book.Book ) => notify
18	when was this book published ?	now => [ param:datePublished:Date ] of ( @org.schema.Book.Book ) => notify
19	how many pages are in this book ?	now => [ param:numberOfPages:Number ] of ( @org.schema.Book.Book ) => notify
20	can you help me find the book it in paperback ?	now => ( @org.schema.Book.Book ) filter param:bookFormat:Enum(AudiobookFormat,EBook,GraphicNovel,Hardcover,Paperback) == enum:Paperback and param:id:Entity(org.schema.Book:Book) =~ " it " => notify
21	can you help me find a dean koontz book with over NUMBER_0 reviews ?	now => ( @org.schema.Book.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:author:Entity(org.schema.Book:Person) == " dean koontz " ^^org.schema.Book:Person => notify
22	help me locate a book in russian that has won a nobel prize in literature	now => ( @org.schema.Book.Book ) filter param:award:Array(String) contains~ " nobel prize in literature " and param:inLanguage:Entity(tt:iso_lang_code) == " russian " ^^tt:iso_lang_code => notify
23	can you help me find the abridged version of the silmarillion ?	now => ( @org.schema.Book.Book ) filter param:abridged:Boolean == true and param:id:Entity(org.schema.Book:Book) =~ " silmarillion " => notify
24	can you help me find a stephen king book over NUMBER_0 pages	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " stephen king " ^^org.schema.Book:Person and param:numberOfPages:Number >= NUMBER_0 => notify
25	what year was the catcher in the rye published ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " catcher in the rye " ) => notify
26	who was the author of pride and prejudice ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " pride and prejudice " ) => notify
27	what awards did to kill a mockingbird win ?	now => [ param:award:Array(String) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " to kill a mockingbird " ) => notify
28	how many pages in jane eyre ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " jane eyre " ) => notify
29	who was the author of the adventures of mark twain ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " adventures of mark twain " ) => notify
32	please give me all books by judy blume that have less than NUMBER_0 pages .	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " judy blume " ^^org.schema.Book:Person and param:numberOfPages:Number <= NUMBER_0 => notify
33	i 'm looking for a first edition book written in french .	now => ( @org.schema.Book.Book ) filter param:bookEdition:String =~ " first edition " and param:inLanguage:Entity(tt:iso_lang_code) == " french " ^^tt:iso_lang_code => notify
34	i 'd like to see ebooks that have a rating of 5 .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number == 5 and param:bookFormat:Enum(AudiobookFormat,EBook,GraphicNovel,Hardcover,Paperback) == enum:EBook => notify
35	find the ernest hemingway book published in NUMBER_0 .	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " ernest hemingway " ^^org.schema.Book:Person and param:datePublished:Date <= new Date ( NUMBER_0 , , , ) + 1 unit:year and param:datePublished:Date >= new Date ( NUMBER_0 , , , ) => notify
38	find the hardcover edition of margaret atwood 's the testaments .	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " margaret atwood " ^^org.schema.Book:Person and param:bookFormat:Enum(AudiobookFormat,EBook,GraphicNovel,Hardcover,Paperback) == enum:Hardcover and param:id:Entity(org.schema.Book:Book) =~ " testaments " => notify
39	find the isbn for the book a private cathedral by james lee burke .	now => [ param:isbn:String ] of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " james lee burke " ^^org.schema.Book:Person and param:id:Entity(org.schema.Book:Book) =~ " a private cathedral " ) => notify
40	find me books written by j k rowling	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " j k rowling " ^^org.schema.Book:Person => notify
41	show me all paperback books	now => ( @org.schema.Book.Book ) filter param:bookFormat:Enum(AudiobookFormat,EBook,GraphicNovel,Hardcover,Paperback) == enum:Paperback => notify
42	find me books in french that won awards	now => ( @org.schema.Book.Book ) filter count ( param:award:Array(String) ) >= 0 and param:inLanguage:Entity(tt:iso_lang_code) == " french " ^^tt:iso_lang_code => notify
43	show me books with over NUMBER_0 pages and published in NUMBER_1	now => ( @org.schema.Book.Book ) filter param:datePublished:Date <= new Date ( NUMBER_1 , , , ) + 1 unit:year and param:datePublished:Date >= new Date ( NUMBER_1 , , , ) and param:numberOfPages:Number >= NUMBER_0 => notify
44	find me all harry potter books	now => ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " harry potter " => notify
50	what was toni morrison 's first book ?	now => ( sort param:datePublished:Date asc of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " toni morrison " ^^org.schema.Book:Person ) ) [ 1 ] => notify
51	what awards did wolf hall win ?	now => [ param:award:Array(String) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " wolf hall " ) => notify
52	how many books did thomas hardy write ?	now => aggregate count of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " thomas hardy " ^^org.schema.Book:Person ) => notify
54	is there an abridged version of war and peace ?	now => ( @org.schema.Book.Book ) filter param:abridged:Boolean == true and param:id:Entity(org.schema.Book:Book) =~ " war and peace " => notify
55	show me book titles that have a rating with more than 4 stars .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number >= 4 => notify
56	which hardcover books have more than NUMBER_0 stars ?	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:bookFormat:Enum(AudiobookFormat,EBook,GraphicNovel,Hardcover,Paperback) == enum:Hardcover => notify
57	what awards did gone with the wind win ?	now => [ param:award:Array(String) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " gone with the wind " ) => notify
58	how many pages are in jane eyre ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " jane eyre " ) => notify
59	what is the publishing date of animal farm ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " animal farm " ) => notify
63	how long is this book	now => [ param:numberOfPages:Number ] of ( @org.schema.Book.Book ) => notify
65	is there an abridged book by leo tolstoy ?	now => ( @org.schema.Book.Book ) filter param:abridged:Boolean == true and param:author:Entity(org.schema.Book:Person) == " leo tolstoy " ^^org.schema.Book:Person => notify
66	did arthur clark win any awards ?	now => [ param:award:Array(String) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " arthur clark " ) => notify
67	what year was the grapes of wrath published ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " grapes of wrath " ) => notify
68	what is the rating of uncle tom 's cabin ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " uncle tom 's cabin " ) => notify
69	how many pages are in the great gatsby ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " great gatsby " ) => notify
70	find me books in english by stanislaw lem .	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " stanislaw lem " ^^org.schema.Book:Person and param:inLanguage:Entity(tt:iso_lang_code) == " english " ^^tt:iso_lang_code => notify
71	get me a list of all pulitzer prize winning books published in NUMBER_0 .	now => ( @org.schema.Book.Book ) filter param:award:Array(String) contains~ " pulitzer prize " and param:datePublished:Date <= new Date ( NUMBER_0 , , , ) + 1 unit:year and param:datePublished:Date >= new Date ( NUMBER_0 , , , ) => notify
72	search for any books with a rating of 5 that also have NUMBER_0 pages or more .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number == 5 and param:numberOfPages:Number >= NUMBER_0 => notify
73	find me a first edition copy of do androids dream of electric sheep .	now => ( @org.schema.Book.Book ) filter param:bookEdition:String =~ " first edition " and param:id:Entity(org.schema.Book:Book) =~ " do androids dream of electric sheep " => notify
80	who is the author of the book the handmaid 's tale ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " handmaid 's tale " ) => notify
81	what is the isbn identifier for the book a wrinkle in time ?	now => [ param:isbn:String ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " wrinkle in time " ) => notify
82	what is the page length of the book something wicked this way comes ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " something wicked this way comes " ) => notify
83	what is the overall rating of the book of mice and men ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " mice and men " ) => notify
85	in what year was anna karenina published ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " anna karenina " ) => notify
86	how many pages are in the great gatsby ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " great gatsby " ) => notify
87	how many awards has the catcher in the rye won ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " catcher in the rye " ) ) => notify
89	is the bible available in e-book format ?	now => ( @org.schema.Book.Book ) filter param:bookFormat:Enum(AudiobookFormat,EBook,GraphicNovel,Hardcover,Paperback) == enum:EBook and param:id:Entity(org.schema.Book:Book) =~ " bible " => notify
90	who is the person that wrote catcher in the rye ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " catcher in the rye " ) => notify
91	how many pages long is the steve jobs biography ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " steve jobs biography " ) => notify
92	what books were written by chuck palahniuk ?	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " chuck palahniuk " ^^org.schema.Book:Person => notify
93	what is the isbn of huckleberry finn ?	now => [ param:isbn:String ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " huckleberry finn " ) => notify
95	where is the isbn number ?	now => [ param:isbn:String ] of ( @org.schema.Book.Book ) => notify
96	what formats do the book come in ?	now => [ param:bookFormat:Enum(AudiobookFormat,EBook,GraphicNovel,Hardcover,Paperback) ] of ( @org.schema.Book.Book ) => notify
98	when was this book published ?	now => [ param:datePublished:Date ] of ( @org.schema.Book.Book ) => notify
100	find me a book written by ernest hemingway	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " ernest hemingway " ^^org.schema.Book:Person => notify
101	find me a hardcover book that was published in NUMBER_0	now => ( @org.schema.Book.Book ) filter param:bookFormat:Enum(AudiobookFormat,EBook,GraphicNovel,Hardcover,Paperback) == enum:Hardcover and param:datePublished:Date <= new Date ( NUMBER_0 , , , ) + 1 unit:year and param:datePublished:Date >= new Date ( NUMBER_0 , , , ) => notify
102	find me a book written in italian	now => ( @org.schema.Book.Book ) filter param:inLanguage:Entity(tt:iso_lang_code) == " italian " ^^tt:iso_lang_code => notify
103	find me the 1st edition of animal farm	now => ( @org.schema.Book.Book ) filter param:bookEdition:String =~ " 1st edition " and param:bookEdition:String =~ " animal farm " => notify
104	find me a book written by agatha christie	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " agatha christie " ^^org.schema.Book:Person => notify
105	who wrote civilwarland in bad decline ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " civilwarland in bad decline " ) => notify
106	in what language was civilwarland in bad decline originally published ?	now => [ param:inLanguage:Entity(tt:iso_lang_code) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " civilwarland in bad decline " ) => notify
107	did civilwarland in bad decline win any awards ?	now => [ param:award:Array(String) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " civilwarland in bad decline " ) => notify
109	when was civilwarland in bad decline published ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " civilwarland in bad decline " ) => notify
110	i need a first edition of anne of green gables .	now => ( @org.schema.Book.Book ) filter param:bookEdition:String =~ " first edition " and param:id:Entity(org.schema.Book:Book) =~ " anne of green gables " => notify
111	find me a list of jodi picoult books .	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " jodi picoult " ^^org.schema.Book:Person => notify
112	find me books with NUMBER_0 pages published in NUMBER_1 .	now => ( @org.schema.Book.Book ) filter param:datePublished:Date <= new Date ( NUMBER_1 , , , ) + 1 unit:year and param:datePublished:Date >= new Date ( NUMBER_1 , , , ) and param:numberOfPages:Number == NUMBER_0 => notify
113	find me books with 5 star ratings published in NUMBER_0 .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number == 5 and param:datePublished:Date <= new Date ( NUMBER_0 , , , ) + 1 unit:year and param:datePublished:Date >= new Date ( NUMBER_0 , , , ) => notify
114	find me ebooks that are written by john grisham .	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " john grisham " ^^org.schema.Book:Person and param:bookFormat:Enum(AudiobookFormat,EBook,GraphicNovel,Hardcover,Paperback) == enum:EBook => notify
116	what is the isbn of the relentless moon	now => [ param:isbn:String ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " relentless moon " ) => notify
117	who is the author of the giving tree ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " giving tree " ) => notify
118	how many pages are there in midnight sun ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " midnight sun " ) => notify
119	what awards has calculating stars won ?	now => [ param:award:Array(String) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " calculating stars " ) => notify
120	when was moby dick published ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " moby dick " ) => notify
121	who wrote moby dick ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " moby dick " ) => notify
123	what is the isbn for to kill a mockingbird ?	now => [ param:isbn:String ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " to kill a mockingbird " ) => notify
124	did the sound and the fury win any awards ?	now => [ param:award:Array(String) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " sound and the fury " ) => notify
125	who wrote the wizard of oz ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " wizard of oz " ) => notify
126	how many pages does war and peace have ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " war and peace " ) => notify
127	has the giving tree won any awards ?	now => [ param:award:Array(String) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " giving tree " ) => notify
130	find me a book that has a 5 star rating with at least NUMBER_0 reviews .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number == 5 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
131	how many pages are in the king james bible ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:String =~ " king james bible " ) => notify
132	look for a book that has a 1 star review with at least NUMBER_0 reviews .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number == 1 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
133	find me a book that was published in NUMBER_0 in japanese .	now => ( @org.schema.Book.Book ) filter param:datePublished:Date <= new Date ( NUMBER_0 , , , ) + 1 unit:year and param:datePublished:Date >= new Date ( NUMBER_0 , , , ) and param:inLanguage:Entity(tt:iso_lang_code) == " japanese " ^^tt:iso_lang_code => notify
134	find me a book by jk rowling that has 5 stars .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number == 5 and param:author:Entity(org.schema.Book:Person) == " jk rowling " ^^org.schema.Book:Person => notify
136	how many pages does war and peace have ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " war and peace " ) => notify
137	what year was the golden compass published ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " golden compass " ) => notify
138	find me an ebook of to kill a mockingbird .	now => ( @org.schema.Book.Book ) filter param:bookFormat:Enum(AudiobookFormat,EBook,GraphicNovel,Hardcover,Paperback) == enum:EBook and param:id:Entity(org.schema.Book:Book) =~ " to kill a mockingbird " => notify
139	what language is the iliad in ?	now => [ param:inLanguage:Entity(tt:iso_lang_code) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " iliad " ) => notify
140	what year was huckleberry finn first published ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " huckleberry finn " ) => notify
141	how many pages is the hobbit ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " hobbit " ) => notify
142	what is the isbn for twilight ?	now => [ param:isbn:String ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " twilight " ) => notify
144	who is the author of the book the giver ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " giver " ) => notify
146	what year was the hobbit written ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " hobbit " ) => notify
147	what is the name of clive cusslers first book ?	now => ( sort param:datePublished:Date asc of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " clive cusslers " ^^org.schema.Book:Person ) ) [ 1 ] => notify
148	what is the average rating of the book forever ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " forever " ) => notify
149	who wrote the wrinkle in time books ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " wrinkle in time " ) => notify
150	i want to read paperback books over NUMBER_0 pages long .	now => ( @org.schema.Book.Book ) filter param:bookFormat:Enum(AudiobookFormat,EBook,GraphicNovel,Hardcover,Paperback) == enum:Paperback and param:numberOfPages:Number >= NUMBER_0 => notify
151	find me hardcover books that have a 5 star rating .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number == 5 and param:bookFormat:Enum(AudiobookFormat,EBook,GraphicNovel,Hardcover,Paperback) == enum:Hardcover => notify
152	find me hardcover books in italian .	now => ( @org.schema.Book.Book ) filter param:bookFormat:Enum(AudiobookFormat,EBook,GraphicNovel,Hardcover,Paperback) == enum:Hardcover and param:inLanguage:Entity(tt:iso_lang_code) == " italian " ^^tt:iso_lang_code => notify
153	is there an abridged book with over NUMBER_0 pages ?	now => ( @org.schema.Book.Book ) filter param:abridged:Boolean == true and param:numberOfPages:Number >= NUMBER_0 => notify
154	i want to read books that were published in NUMBER_0 .	now => ( @org.schema.Book.Book ) filter param:datePublished:Date <= new Date ( NUMBER_0 , , , ) + 1 unit:year and param:datePublished:Date >= new Date ( NUMBER_0 , , , ) => notify
156	how many pages are in the greening of america	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " greening of america " ) => notify
157	who is the author of the impossible state	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " impossible state " ) => notify
158	is the book the sociopath next door abridged ?	now => [ param:abridged:Boolean ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " sociopath next door " ) => notify
159	what year was madame bovary published	now => [ param:datePublished:Date ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " madame bovary " ) => notify
160	how many books has james patterson written ?	now => aggregate count of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " james patterson " ^^org.schema.Book:Person ) => notify
161	what is the name of dan brown 's first book ?	now => ( sort param:datePublished:Date asc of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " dan brown " ^^org.schema.Book:Person ) ) [ 1 ] => notify
162	how many pages is american gods by neil gaiman ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " neil gaiman " ^^org.schema.Book:Person and param:id:Entity(org.schema.Book:Book) =~ " american gods " ) => notify
163	how many reviews does the vampire lestat have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " vampire lestat " ) => notify
164	what is the isbn of a christmas carol by charles dickens ?	now => [ param:isbn:String ] of ( ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " charles dickens " ^^org.schema.Book:Person and param:id:Entity(org.schema.Book:Book) =~ " christmas carol " ) => notify
165	bring up english language books by kurt vonnegut .	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " kurt vonnegut " ^^org.schema.Book:Person and param:inLanguage:Entity(tt:iso_lang_code) == " english " ^^tt:iso_lang_code => notify
167	show me books published in NUMBER_0 which are over NUMBER_1 pages long .	now => ( @org.schema.Book.Book ) filter param:datePublished:Date <= new Date ( NUMBER_0 , , , ) + 1 unit:year and param:datePublished:Date >= new Date ( NUMBER_0 , , , ) and param:numberOfPages:Number >= NUMBER_1 => notify
168	i 'd like to see books that have won the newbery medal and which have NUMBER_0 ratings or more .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 and param:award:Array(String) contains~ " newbery " => notify	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 and param:award:Array(String) contains~ " newbery medal " => notify
169	i want to see a list of 1st edition hardcover titles .	now => ( @org.schema.Book.Book ) filter param:bookEdition:String =~ " 1st edition " and param:bookFormat:Enum(AudiobookFormat,EBook,GraphicNovel,Hardcover,Paperback) == enum:Hardcover => notify
170	can you tell me what books stephen king authored ?	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " stephen king " ^^org.schema.Book:Person => notify
171	what is the german language book that has the highest overall rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Book.Book ) filter param:inLanguage:Entity(tt:iso_lang_code) == " german " ^^tt:iso_lang_code ) ) [ 1 ] => notify
173	how many pages are in the book ready player one ?	now => [ param:numberOfPages:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " ready player one " ) => notify
174	what books authored by dean koontz are available in paperback format ?	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " dean koontz " ^^org.schema.Book:Person and param:bookFormat:Enum(AudiobookFormat,EBook,GraphicNovel,Hardcover,Paperback) == enum:Paperback => notify
175	i need a book with the edition 4th .	now => ( @org.schema.Book.Book ) filter param:bookEdition:String =~ " 4th " => notify
176	tell me a movie with a review count of more than 5 .	now => ( @org.schema.Book.Book ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
177	what is a book that is abridged and has a name the scarlet letter ?	now => ( @org.schema.Book.Book ) filter param:abridged:Boolean == true and param:id:Entity(org.schema.Book:Book) =~ " scarlet letter " => notify
178	what is a book with a number of pages over NUMBER_0 ?	now => ( @org.schema.Book.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
179	can you tell me a book with a rating of 3 and in audiobook format ?	now => ( @org.schema.Book.Book ) filter param:aggregateRating.ratingValue:Number == 3 and param:bookFormat:Enum(AudiobookFormat,EBook,GraphicNovel,Hardcover,Paperback) == enum:AudiobookFormat => notify
181	what 's the book with the most number of pages ?	now => ( sort param:numberOfPages:Number desc of ( @org.schema.Book.Book ) ) [ 1 ] => notify
182	which book has the most amount of reviews but also recieved an award ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Book.Book ) filter count ( param:award:Array(String) ) >= 1 ) ) [ 1 ] => notify
184	are the star wars books highly rated ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " star wars " ) => notify
185	find where the wild things are .	now => ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " where the wild things are " => notify
186	who wrote angels and demons ?	now => [ param:author:Entity(org.schema.Book:Person) ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " angels and demons " ) => notify
187	how many reviews are posted for a game of thrones ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " a game of thrones " ) => notify
188	what is the overall rating for the da vinci code ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " da vinci code " ) => notify
189	how many awards did the book the torrents of spring win ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " torrents of spring " ) ) => notify
190	what series did jk rowling write ?	now => ( @org.schema.Book.Book ) filter param:author:Entity(org.schema.Book:Person) == " jk rowling " ^^org.schema.Book:Person => notify
194	how many pages is the first harry potter book ?	now => [ param:numberOfPages:Number ] of ( ( sort param:datePublished:Date asc of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " harry potter " ) ) [ 1 ] ) => notify
195	what is the name of the newest published edition of the holy bible ?	now => ( sort param:datePublished:Date desc of ( ( @org.schema.Book.Book ) filter param:bookEdition:String =~ " holy bible " ) ) [ 1 ] => notify
199	what year was j.k. rowling 's first book published ?	now => [ param:datePublished:Date ] of ( ( sort param:datePublished:Date asc of ( ( @org.schema.Book.Book ) filter param:id:Entity(org.schema.Book:Book) =~ " j.k. rowling " ) ) [ 1 ] ) => notify
