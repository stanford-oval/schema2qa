0	give me the names of people who have had more than NUMBER_0 employers ?	now => ( @org.schema.Person.Person ) filter count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) >= NUMBER_0 => notify
1	what is the city with people that have more than NUMBER_0 college degrees ?	now => [ param:address.addressLocality:String ] of ( ( @org.schema.Person.Person ) filter count ( param:alumniOf:Array(Entity(org.schema.Person:Organization)) ) >= NUMBER_0 ) => notify
3	give me the names of people who went to more than one university and have more than one award ?	now => ( @org.schema.Person.Person ) filter count ( param:alumniOf:Array(Entity(org.schema.Person:Organization)) ) >= 1 and count ( param:award:Array(String) ) >= 1 => notify
4	give me the name of the person that works at google with the most awards ?	now => ( sort param:count:Number desc of ( ( compute count ( param:award:Array(String) ) of ( @org.schema.Person.Person ) ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization ) ) [ 1 ] => notify
5	show me all people from los angeles who work for google .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " los angeles " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
6	list names of those who have worked for both apple and samsung .	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " apple " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " samsung " ^^org.schema.Person:Organization => notify
7	show me all those who went to harvard with at least 1 award .	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= 1 and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization => notify
8	who lives in nyc and went to columbia ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " nyc " and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " columbia " ^^org.schema.Person:Organization => notify
10	which amazon employee went to uc berkeley ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " uc berkeley " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
11	which microsoft employee previously worked for google ?	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " microsoft " ^^org.schema.Person:Organization => notify
12	who made the dean 's list for harvard ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization and param:award:Array(String) contains~ " dean 's list " => notify
13	who worked for both microsoft and amazon ?	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " microsoft " ^^org.schema.Person:Organization => notify
14	who went to both harvard and stanford ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " stanford " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization => notify
15	who went to stanford and worked at amazon ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " stanford " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
16	name all the people who have won scholarships .	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " scholarships " => notify
17	who worked for apple and microsoft ?	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " microsoft " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " apple " ^^org.schema.Person:Organization => notify
18	who went to harvard and won an award ?	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= 1 and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization => notify
19	who has worked for google and lived in new york ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " new york " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
21	find someone from miami who went to harvard .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " miami " and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization => notify
22	is there anyone from mit who won more than NUMBER_0 awards ?	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= NUMBER_0 and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " mit " ^^org.schema.Person:Organization => notify
23	are there any people who worked for both apple and netscape ?	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " netscape " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " apple " ^^org.schema.Person:Organization => notify
24	find me someone who lives in seattle and went to mit .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " seattle " and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " mit " ^^org.schema.Person:Organization => notify
25	what 's the name of the worker living in chicago ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " chicago " => notify
26	which worker has won the most awards in seattle ?	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " seattle " ) ) ) [ 1 ] => notify
30	i need an employee that lives in new york and went to stanford .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " new york " and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " stanford " ^^org.schema.Person:Organization => notify
31	i 'm looking for an employee at apple that went to harvard .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " apple " ^^org.schema.Person:Organization => notify
32	show me someone that has worked for tesla and microsoft .	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " microsoft " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " tesla " ^^org.schema.Person:Organization => notify
33	can you find a person that has been at NUMBER_0 companies in portland ?	now => ( @org.schema.Person.Person ) filter count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) == NUMBER_0 and param:address.addressLocality:String =~ " portland " => notify
34	i want the name of a person that has won NUMBER_0 awards for their work .	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) == NUMBER_0 => notify
36	find someone who went to harvard and lives in los angeles .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " los angeles " and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization => notify
37	who has at least NUMBER_0 awards and went to at least NUMBER_1 different universities ?	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= NUMBER_0 and count ( param:alumniOf:Array(Entity(org.schema.Person:Organization)) ) >= NUMBER_1 => notify
38	find an arizona state graduate who worked for microsoft .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " arizona state " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " microsoft " ^^org.schema.Person:Organization => notify
40	who went to stanford and lives in san francisco ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " san francisco " and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " stanford " ^^org.schema.Person:Organization => notify
41	who went to NUMBER_0 different colleges before working at amazon ?	now => ( @org.schema.Person.Person ) filter count ( param:alumniOf:Array(Entity(org.schema.Person:Organization)) ) == NUMBER_0 and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
42	find a harvard graduate who worked for NUMBER_0 different companies	now => ( @org.schema.Person.Person ) filter count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) == NUMBER_0 and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization => notify
43	who lives in san diego and won a pulitzer ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " san diego " and param:award:Array(String) contains~ " pulitzer " => notify
44	tell me the names of people who went to NUMBER_0 different colleges	now => ( @org.schema.Person.Person ) filter count ( param:alumniOf:Array(Entity(org.schema.Person:Organization)) ) == NUMBER_0 => notify
45	show me all the harvard graduates working at ibm .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " ibm " ^^org.schema.Person:Organization => notify
49	i need to see everyone living in seattle and working for amazon .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " seattle " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
50	display the awards earned by stephen smith .	now => [ param:award:Array(String) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " stephen smith " ) => notify
51	who worked for microsoft and attended yale ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " yale " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " microsoft " ^^org.schema.Person:Organization => notify
52	find those with more than NUMBER_0 awards who worked for fewer than NUMBER_1 companies .	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= NUMBER_0 and count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) <= NUMBER_1 => notify
53	who are the harvard alumni living in san diego ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " san diego " and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization => notify
55	who lives in seattle and went to cornell ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " seattle " and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " cornell " ^^org.schema.Person:Organization => notify
56	who went to yale and made the dean 's list ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " yale " ^^org.schema.Person:Organization and param:award:Array(String) contains~ " dean 's list " => notify
57	who won a pulitzer and lives in chicago ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " chicago " and param:award:Array(String) contains~ " pulitzer " => notify
58	who works for google and won a nobel prize ?	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " nobel prize " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
59	who went to both harvard and yale ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " yale " ^^org.schema.Person:Organization => notify
60	tell me the celebrities who won oscars	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " oscars " => notify
62	find a uncg grad who now works for uncg	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " uncg " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " uncg " ^^org.schema.Person:Organization => notify
63	show me yale grads who are in congress	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " yale " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " congress " ^^org.schema.Person:Organization => notify
64	tell me people who have won both a tony and an oscar	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " tony " and param:award:Array(String) contains~ " oscar " => notify
65	who has won an award and went to notre dame .	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) == 1 and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " notre dame " ^^org.schema.Person:Organization => notify
66	who has worked for walmart and taco bell .	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " walmart " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " taco bell " ^^org.schema.Person:Organization => notify
67	who lives in maine and has worked for NUMBER_0 companies .	now => ( @org.schema.Person.Person ) filter count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) == NUMBER_0 and param:address.addressLocality:String =~ " maine " => notify
68	who lives in denver and worked for microsoft .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " denver " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " microsoft " ^^org.schema.Person:Organization => notify
69	who went to nyu and has won NUMBER_0 awards .	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) == NUMBER_0 and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " nyu " ^^org.schema.Person:Organization => notify
71	how many people working at amazon have more than NUMBER_0 awards ?	now => aggregate count of ( ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= NUMBER_0 and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization ) => notify
73	which google employees now work for alphabet ?	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " alphabet " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
75	who has won NUMBER_0 awards and went to yale ?	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) == NUMBER_0 and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " yale " ^^org.schema.Person:Organization => notify
76	find an amazon employee who went to usc .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " usc " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
77	can you look up a person who won the nobel peace prize and went to brown university .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " brown university " ^^org.schema.Person:Organization and param:award:Array(String) contains~ " nobel peace prize " => notify
78	get me an individual who has NUMBER_0 colleges in their history and has worked for NUMBER_1 companies .	now => ( @org.schema.Person.Person ) filter count ( param:alumniOf:Array(Entity(org.schema.Person:Organization)) ) == NUMBER_0 and count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) == NUMBER_1 => notify
79	find me a person living in chicago that went to bristol university .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " chicago " and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " bristol university " ^^org.schema.Person:Organization => notify
80	find a yale graduate that was on the dean 's list .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " yale " ^^org.schema.Person:Organization and param:award:Array(String) contains~ " dean 's list " => notify
81	who lives in seattle and works for amazon ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " seattle " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
82	tell me the name of a microsoft employee who went to purdue .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " purdue " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " microsoft " ^^org.schema.Person:Organization => notify
83	who has worked for NUMBER_0 companies and has won NUMBER_1 scholarships ?	now => ( @org.schema.Person.Person ) filter count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) == NUMBER_0 and count ( param:award:Array(String) filter { param:value:String =~ " scholarships " } ) == NUMBER_1 => notify
84	who won a purple heart and worked for apple ?	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " purple heart " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " apple " ^^org.schema.Person:Organization => notify
85	list the names of people living in phoenix who went to cornell university .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " phoenix " and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " cornell university " ^^org.schema.Person:Organization => notify
86	name a los angeles resident who has won the hasty pudding man of the year award .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " los angeles " and param:award:Array(String) contains~ " hasty pudding man of the year " => notify
87	what are the names of boeing employees who attended at least NUMBER_0 universities ?	now => ( @org.schema.Person.Person ) filter count ( param:alumniOf:Array(Entity(org.schema.Person:Organization)) ) >= NUMBER_0 and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " boeing " ^^org.schema.Person:Organization => notify
88	who has worked at more than NUMBER_0 companies and lives in sacramento , california ?	now => ( @org.schema.Person.Person ) filter count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) >= NUMBER_0 and param:address.addressLocality:String =~ " sacramento " => notify
89	name someone who went to california institute of the arts and has won a webby award .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " california institute of the arts " ^^org.schema.Person:Organization and param:award:Array(String) contains~ " webby " => notify
91	who works for hotmail that was an alumni of tsu ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " tsu " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " hotmail " ^^org.schema.Person:Organization => notify
92	who from google has won the most awards and are from georgia ?	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " georgia " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization ) ) ) [ 1 ] => notify	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @org.schema.Person.Person ) filter param:address.addressLocality =~ " georgia " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization ) ) ) [ 1 ] => notify
94	who at google has won more than NUMBER_0 awards ?	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= NUMBER_0 and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
96	search for people that worked at samsung and ibm .	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " samsung " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " ibm " ^^org.schema.Person:Organization => notify
97	search for people that attended NUMBER_0 different colleges and won at least NUMBER_1 awards .	now => ( @org.schema.Person.Person ) filter count ( param:alumniOf:Array(Entity(org.schema.Person:Organization)) ) == NUMBER_0 and count ( param:award:Array(String) ) >= NUMBER_1 => notify
98	show me people living in boise that went to mit .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " boise " and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " mit " ^^org.schema.Person:Organization => notify
100	who won NUMBER_0 or more awards and lives in los angeles ?	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= NUMBER_0 and param:address.addressLocality:String =~ " los angeles " => notify
101	what person worked for NUMBER_0 or more companies and has won at least NUMBER_1 awards ?	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= NUMBER_1 and count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) >= NUMBER_0 => notify
102	who worked for microsoft and lives in dallas ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " dallas " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " microsoft " ^^org.schema.Person:Organization => notify
103	who attended stanford and worked for at least NUMBER_0 companies ?	now => ( @org.schema.Person.Person ) filter count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) >= NUMBER_0 and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " stanford " ^^org.schema.Person:Organization => notify
104	who has attended NUMBER_0 or more colleges and works for uber ?	now => ( @org.schema.Person.Person ) filter count ( param:alumniOf:Array(Entity(org.schema.Person:Organization)) ) >= NUMBER_0 and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " uber " ^^org.schema.Person:Organization => notify
105	find people that work at linkbelt and were on the dean 's list	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " dean 's list " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " linkbelt " ^^org.schema.Person:Organization => notify
106	show me people from new york that won at least NUMBER_0 awards	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= NUMBER_0 and param:address.addressLocality:String =~ " new york " => notify
107	who went to yale and works at dell	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " yale " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " dell " ^^org.schema.Person:Organization => notify
108	tell me the names of people that went to NUMBER_0 universities	now => ( @org.schema.Person.Person ) filter count ( param:alumniOf:Array(Entity(org.schema.Person:Organization)) ) == NUMBER_0 => notify
109	show me people that live in seattle and worked at NUMBER_0 companies	now => ( @org.schema.Person.Person ) filter count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) == NUMBER_0 and param:address.addressLocality:String =~ " seattle " => notify
110	show me all the people who graduated from nc state that work at red hat .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " nc state " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " red hat " ^^org.schema.Person:Organization => notify
112	list the people that work at red hat that have won at least NUMBER_0 awards .	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= NUMBER_0 and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " red hat " ^^org.schema.Person:Organization => notify
113	find duke alumni that work at glaxosmithkline	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " duke " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " glaxosmithkline " ^^org.schema.Person:Organization => notify
115	find an amazon employee that went to mit .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " mit " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
116	who worked for both google and microsoft .	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " microsoft " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
117	find a facebook employee that went to yale .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " yale " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " facebook " ^^org.schema.Person:Organization => notify
118	who won a nobel prize that went to stanford ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " stanford " ^^org.schema.Person:Organization and param:award:Array(String) contains~ " nobel prize " => notify
119	tell me the names of people who won at least NUMBER_0 awards .	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= NUMBER_0 => notify
120	find an employee that works for tesla that went to arizona state university .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " arizona state university " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " tesla " ^^org.schema.Person:Organization => notify
121	find an employee that has worked for google that lives in kansas city .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " kansas city " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
122	how many people that work for fedex also worked for ups .	now => aggregate count of ( ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " ups " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " fedex " ^^org.schema.Person:Organization ) => notify
123	how many employees of the new york times have won pulitzer prizes ?	now => aggregate count of ( ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " pulitzer prizes " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " new york times " ^^org.schema.Person:Organization ) => notify
125	find an apple employee that went to devry .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " devry " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " apple " ^^org.schema.Person:Organization => notify
126	tell me the names of people who are from seattle .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " seattle " => notify
127	who has worked for google that went to stanford ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " stanford " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
128	who has worked for both apple and microsoft ?	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " microsoft " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " apple " ^^org.schema.Person:Organization => notify
129	who won the pulitzer prize that went to yale ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " yale " ^^org.schema.Person:Organization and param:award:Array(String) contains~ " pulitzer prize " => notify
132	i need a list of all workers that are in new york and work for yahoo .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " new york " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " yahoo " ^^org.schema.Person:Organization => notify
134	can you point out the list of all members of the south carolina bar that went to clemson university .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " clemson university " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " south carolina bar " ^^org.schema.Person:Organization => notify
135	what is the name of the person who has won NUMBER_0 awards ?	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) == NUMBER_0 => notify
136	who has worked for apple and lives in new york city ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " new york city " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " apple " ^^org.schema.Person:Organization => notify
137	find someone who went to yale and works at amazon .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " yale " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
138	show me someone who attended harvard and made the dean 's list	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization and param:award:Array(String) contains~ " dean 's list " => notify
139	who is living in san francisco and working for facebook ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " san francisco " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " facebook " ^^org.schema.Person:Organization => notify
140	who was on the dean 's list and worked at microsoft .	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " dean 's list " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " microsoft " ^^org.schema.Person:Organization => notify
141	find an amazon employee that worked for at least NUMBER_0 companies and went to pepperdine university .	now => ( @org.schema.Person.Person ) filter count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) >= NUMBER_0 and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " pepperdine university " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
142	tell me who went to NUMBER_0 universities and works at garmin .	now => ( @org.schema.Person.Person ) filter count ( param:alumniOf:Array(Entity(org.schema.Person:Organization)) ) == NUMBER_0 and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " garmin " ^^org.schema.Person:Organization => notify
143	who lives in boston and worked for amazon .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " boston " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
144	what are the names of people that won NUMBER_0 awards .	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) == NUMBER_0 => notify
145	find a ucla graduate who lives in san diego .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " san diego " and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " ucla " ^^org.schema.Person:Organization => notify
148	find someone names tom who worked for myspace .	now => ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " tom " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " myspace " ^^org.schema.Person:Organization => notify
149	tell me the name of those who work for ibm with no college degree .	now => ( @org.schema.Person.Person ) filter count ( param:alumniOf:Array(Entity(org.schema.Person:Organization)) ) == 0 and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " ibm " ^^org.schema.Person:Organization => notify
150	who went to harvard and now works at google ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
151	tell me the names of facebook employees that attended stanford .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " stanford " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " facebook " ^^org.schema.Person:Organization => notify
152	who lives in palo alto and works for google ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " palo alto " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
153	tell me the names of the people living in seattle that work for microsoft .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " seattle " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " microsoft " ^^org.schema.Person:Organization => notify
156	find a bank of america employee that graduated from mit .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " mit " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " bank of america " ^^org.schema.Person:Organization => notify
157	who worked for both citibank and google ?	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " citibank " ^^org.schema.Person:Organization => notify
158	who lives in san francisco and went to yale ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " san francisco " and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " yale " ^^org.schema.Person:Organization => notify
159	name someone who has NUMBER_0 awards .	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) == NUMBER_0 => notify
160	how many ibm employees went to yale ?	now => aggregate count of ( ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " yale " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " ibm " ^^org.schema.Person:Organization ) => notify
161	how many people have worked for tesla and amazon ?	now => aggregate count of ( ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " tesla " ^^org.schema.Person:Organization ) => notify
162	find any employees the went to ucla and were on the dean 's list .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " ucla " ^^org.schema.Person:Organization and param:award:Array(String) contains~ " dean 's list " => notify
163	find me who went to harvard and won a pulitzer prize .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization and param:award:Array(String) contains~ " pulitzer prize " => notify
164	find me an employee that worked for at&t and lives in houston .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " houston " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " at&t " ^^org.schema.Person:Organization => notify
170	how many winners of the mcarthur grant work for apple ?	now => aggregate count of ( ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " mcarthur grant " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " apple " ^^org.schema.Person:Organization ) => notify
173	where do most of facebook 's employees live ?	now => [ param:address.addressLocality:String ] of ( ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " facebook " ^^org.schema.Person:Organization ) => notify
174	how many uc berkley graduates have won a nobel prize ?	now => aggregate count of ( ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " uc berkley " ^^org.schema.Person:Organization and param:award:Array(String) contains~ " nobel prize " ) => notify
175	give me a list of people in st. louis working at monsanto .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " st. louis " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " monsanto " ^^org.schema.Person:Organization => notify
177	i need to see all the students at yale who have received full ride scholarships .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " yale " ^^org.schema.Person:Organization and param:award:Array(String) contains~ " full ride scholarships " => notify
178	please list everyone without a degree currently working for express scripts .	now => ( @org.schema.Person.Person ) filter count ( param:alumniOf:Array(Entity(org.schema.Person:Organization)) ) == 0 and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " express scripts " ^^org.schema.Person:Organization => notify
180	please send me list of those who worked for ford motor company .	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " ford motor company " ^^org.schema.Person:Organization => notify
181	please send me a list of all who are members of the north carolina bar .	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " north carolina bar " ^^org.schema.Person:Organization => notify
182	i would a list of all who have degrees from unc chapel hill .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " unc chapel hill " ^^org.schema.Person:Organization => notify
192	who went to yale , and also worked at pizza hut ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " yale " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " pizza hut " ^^org.schema.Person:Organization => notify
195	find boeing employees that live in seattle .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " seattle " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " boeing " ^^org.schema.Person:Organization => notify
196	find united airlines employees that reside in chicago .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " chicago " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " united airlines " ^^org.schema.Person:Organization => notify
197	get me people who went to michigan university that live in houston .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " houston " and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " michigan university " ^^org.schema.Person:Organization => notify
198	can i get a list of amazon employees who went to university of illinois .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " university of illinois " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
199	i want to know the names of anyone who has worked starbuck 's and went to vanderbuilt .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " vanderbuilt " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " starbuck 's " ^^org.schema.Person:Organization => notify
200	who has won over NUMBER_0 awards ?	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= NUMBER_0 => notify
201	show me amazon employees that went to harvard .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
202	i want to see the people that work for google and have won at least NUMBER_0 awards .	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= NUMBER_0 and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
203	show me people that live in dallas and have worked for amazon .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " dallas " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
204	i want to see people that have at least NUMBER_0 degrees and work for google .	now => ( @org.schema.Person.Person ) filter count ( param:alumniOf:Array(Entity(org.schema.Person:Organization)) ) >= NUMBER_0 and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
206	tell me all the people from stanford that have at least NUMBER_0 major awards	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= NUMBER_0 and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " stanford " ^^org.schema.Person:Organization => notify
207	who has worked for yahoo and microsoft ?	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " microsoft " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " yahoo " ^^org.schema.Person:Organization => notify
210	find a yahoo employee that 's won at least NUMBER_0 awards .	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= NUMBER_0 and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " yahoo " ^^org.schema.Person:Organization => notify
211	find an amazon employee that attended harvard .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
213	find a google employee that made the dean 's list .	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " dean 's list " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
214	who worked for facebook and attended stanford ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " stanford " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " facebook " ^^org.schema.Person:Organization => notify
215	locate a person who went to NUMBER_0 different colleges and lives in los angeles .	now => ( @org.schema.Person.Person ) filter count ( param:alumniOf:Array(Entity(org.schema.Person:Organization)) ) == NUMBER_0 and param:address.addressLocality:String =~ " los angeles " => notify
216	who received a pulitzer prize and works at doubleday ?	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " pulitzer prize " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " doubleday " ^^org.schema.Person:Organization => notify
218	name a person who attended mit and has worked for NUMBER_0 companies .	now => ( @org.schema.Person.Person ) filter count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) == NUMBER_0 and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " mit " ^^org.schema.Person:Organization => notify
219	who works at boeing and has won NUMBER_0 separate awards ?	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) == NUMBER_0 and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " boeing " ^^org.schema.Person:Organization => notify
rerun1f56	can you find me someone living in las vegas ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " las vegas " => notify
rerun2f186	how many people in dallas graduated from the university of texas ?	now => aggregate count of ( ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " dallas " and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " university of texas " ^^org.schema.Person:Organization ) => notify
rerun2f198	list the names of those who have made honor roll .	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " honor roll " => notify
rerun1f20	can you see if robert baldwin has a profile listed ?	now => ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " robert baldwin " => notify
rerun1f192	show me who graduated from princeton	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " princeton " ^^org.schema.Person:Organization => notify
rerun2f40	who worked for both ea and bethesda ?	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " ea " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " bethesda " ^^org.schema.Person:Organization => notify
rerun2f49	find a person with more then NUMBER_0 previous jobs who has attended NUMBER_1 universities .	now => ( @org.schema.Person.Person ) filter count ( param:alumniOf:Array(Entity(org.schema.Person:Organization)) ) == NUMBER_1 and count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) >= NUMBER_0 => notify
rerun2f187	has anybody at working at google graduated from princeton ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " princeton " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
rerun2f9	who works at amazon and went to usc ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " usc " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
rerun2f77	how many harvard alumni work for the white house ?	now => aggregate count of ( ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " white house " ^^org.schema.Person:Organization ) => notify
rerun2f27	who has worked at both bank of america and citibank ?	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " bank of america " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " citibank " ^^org.schema.Person:Organization => notify
rerun1f177	locate a person that went to yale law school .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " yale law school " ^^org.schema.Person:Organization => notify
rerun2f189	name all of the employees at facebook who have won multiple awards .	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= 1 and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " facebook " ^^org.schema.Person:Organization => notify
rerun1f166	find someone who went to yale	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " yale " ^^org.schema.Person:Organization => notify
rerun1f5	who lives in chicago ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " chicago " => notify
rerun1f24	is there anyone who has graduated from NUMBER_0 different universities ?	now => ( @org.schema.Person.Person ) filter count ( param:alumniOf:Array(Entity(org.schema.Person:Organization)) ) == NUMBER_0 => notify
rerun2f145	who won an award and only attended 1 school ?	now => ( @org.schema.Person.Person ) filter count ( param:alumniOf:Array(Entity(org.schema.Person:Organization)) ) == 1 and count ( param:award:Array(String) ) == 1 => notify
rerun1f187	who is a rhodes scholar ?	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " rhodes scholar " => notify
rerun1f197	who lives in seattle ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " seattle " => notify
rerun1f38	find fenton l. smitherson .	now => ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " fenton l. smitherson " => notify
rerun2f115	show me everyone named michael gannon living in st. louis , mo. .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " st. louis , mo. " and param:id:Entity(org.schema.Person:Person) =~ " michael gannon " => notify
rerun1f31	who has held NUMBER_0 jobs ?	now => ( @org.schema.Person.Person ) filter count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) == NUMBER_0 => notify
rerun1f47	who attended florida state university ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " florida state university " ^^org.schema.Person:Organization => notify
rerun1f69	who went to berkley ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " berkley " ^^org.schema.Person:Organization => notify
rerun1f152	find a facebook employee .	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " facebook " ^^org.schema.Person:Organization => notify
rerun1f32	show me people with NUMBER_0 awards or more .	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= NUMBER_0 => notify
rerun1f142	who lives in miami florida ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " miami florida " => notify
rerun2f122	give me the names of people that won NUMBER_0 scholarships .	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) filter { param:value:String =~ " scholarships " } ) == NUMBER_0 => notify
rerun2f169	display people that work for amazon and live in dallas .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " dallas " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
rerun1f106	find an employee of disney .	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " disney " ^^org.schema.Person:Organization => notify
rerun1f19	who worked for only one company ?	now => ( @org.schema.Person.Person ) filter count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) == 1 => notify
rerun1f86	show me people that won a pulitzer prize .	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " pulitzer prize " => notify
rerun1f85	who works for dell ?	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " dell " ^^org.schema.Person:Organization => notify
rerun1f36	i want people that have worked for NUMBER_0 or more companies .	now => ( @org.schema.Person.Person ) filter count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) >= NUMBER_0 => notify
rerun1f52	who has won a pulitzer prize ?	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " pulitzer prize " => notify
rerun2f121	show me the people that live in houston and went to the university of texas .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " houston " and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " university of texas " ^^org.schema.Person:Organization => notify
rerun2f106	who worked for google and lives in new york ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " new york " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
rerun2f140	who worked for both twitter and youtube ?	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " twitter " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " youtube " ^^org.schema.Person:Organization => notify
rerun2f89	search for someone with NUMBER_0 awards working for delta .	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) == NUMBER_0 and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " delta " ^^org.schema.Person:Organization => notify
rerun2f56	who attended massasoit community college before attending the university of massachusetts amherst ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " massasoit community college " ^^org.schema.Person:Organization and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " university of massachusetts amherst " ^^org.schema.Person:Organization => notify
rerun2f132	give me NUMBER_0 names of people who have won NUMBER_1 awards	now => ( ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) == NUMBER_1 ) [ NUMBER_0 ] => notify
rerun2f13	find me someone who is a nobel prize winner that has worked at credit suisse .	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " nobel prize " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " credit suisse " ^^org.schema.Person:Organization => notify
rerun2f67	i 'd like to know apple employees who have at least one award .	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= 1 and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " apple " ^^org.schema.Person:Organization => notify
rerun2f179	who lives in san francisco and worked for at least NUMBER_0 companies ?	now => ( @org.schema.Person.Person ) filter count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) >= NUMBER_0 and param:address.addressLocality:String =~ " san francisco " => notify
rerun1f116	show me people who live in rochester , new york .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " rochester , new york " => notify
rerun1f156	who currently lives in san francisco ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " san francisco " => notify
rerun2f69	i would like the names of people who went to university of alabama .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " university of alabama " ^^org.schema.Person:Organization => notify
rerun2f124	how many people that work for ge were on the deans ' list ?	now => aggregate count of ( ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " ge " ^^org.schema.Person:Organization and param:award:Array(String) contains~ " deans ' list " ) => notify
rerun2f71	find an employee who worked for microsoft and facebook	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " microsoft " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " facebook " ^^org.schema.Person:Organization => notify
rerun1f87	who has worked for less than NUMBER_0 companies ?	now => ( @org.schema.Person.Person ) filter count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) <= NUMBER_0 => notify
rerun1f122	who was awarded a rhodes scholarship ?	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " rhodes scholarship " => notify
rerun1f150	who won an academy awards ?	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " academy " => notify
rerun2f12	get all individuals that have worked for both google and starbuck 's .	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " starbuck 's " ^^org.schema.Person:Organization => notify
rerun1f4	show me who has worked for microsoft ?	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " microsoft " ^^org.schema.Person:Organization => notify
rerun2f102	name all the people that work at red hat that have won at least NUMBER_0 awards .	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= NUMBER_0 and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " red hat " ^^org.schema.Person:Organization => notify
rerun2f190	who won the pulitzer price that also went to georgetown ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " georgetown " ^^org.schema.Person:Organization and param:award:Array(String) contains~ " pulitzer price " => notify
rerun2f25	find facebook employees who went to usc .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " usc " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " facebook " ^^org.schema.Person:Organization => notify
rerun2f154	search for employees living in miami who have worked for carnival cruise line .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " miami " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " carnival cruise line " ^^org.schema.Person:Organization => notify
rerun2f10	get me a boeing employee that graduated from harvard .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " boeing " ^^org.schema.Person:Organization => notify
rerun1f72	who won the hughes medal ?	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " hughes medal " => notify
rerun1f16	show me an apple employee	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " apple " ^^org.schema.Person:Organization => notify
rerun1f49	who has received at least NUMBER_0 scholarships ?	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) filter { param:value:String =~ " scholarships " } ) >= NUMBER_0 => notify
rerun1f137	who has won more than NUMBER_0 scholarships ?	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) filter { param:value:String =~ " scholarships " } ) >= NUMBER_0 => notify
rerun1f73	who worked for hp ?	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " hp " ^^org.schema.Person:Organization => notify
rerun2f125	find a pulitzer prize winner who attended ucla .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " ucla " ^^org.schema.Person:Organization and param:award:Array(String) contains~ " pulitzer prize " => notify
rerun1f124	who worked for only 1 company ?	now => ( @org.schema.Person.Person ) filter count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) == 1 => notify
rerun1f134	who lives in tulsa ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " tulsa " => notify
rerun1f151	tell me the names of people who won more than NUMBER_0 academy awards .	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) filter { param:value:String =~ " academy " } ) >= NUMBER_0 => notify
rerun2f38	name off all the people who work at sony	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " sony " ^^org.schema.Person:Organization => notify
rerun1f89	display people who attended cornell .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " cornell " ^^org.schema.Person:Organization => notify
rerun2f95	show people named chuck sneed living in springfield	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " springfield " and param:id:Entity(org.schema.Person:Person) =~ " chuck sneed " => notify
rerun1f143	who has experiences working for at least NUMBER_0 companies ?	now => ( @org.schema.Person.Person ) filter count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) >= NUMBER_0 => notify
rerun2f24	how many people have worked for microsoft and went to multiple universities	now => aggregate count of ( ( @org.schema.Person.Person ) filter count ( param:alumniOf:Array(Entity(org.schema.Person:Organization)) ) >= 1 and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " microsoft " ^^org.schema.Person:Organization ) => notify
rerun1f144	show me everyone who has at least NUMBER_0 college degrees	now => ( @org.schema.Person.Person ) filter count ( param:alumniOf:Array(Entity(org.schema.Person:Organization)) ) >= NUMBER_0 => notify
rerun2f1	what employees from dunder mifflin graduated from yale ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " yale " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " dunder mifflin " ^^org.schema.Person:Organization => notify
rerun1f23	show me all the profiles of people living in spanish lake , mo. .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " spanish lake , mo. " => notify
rerun2f135	how many people work for both walmart and target ?	now => aggregate count of ( ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " walmart " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " target " ^^org.schema.Person:Organization ) => notify
rerun2f65	list the names of people who live in san francisco .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " san francisco " => notify
rerun2f167	search for people that have worked for at least NUMBER_0 companies and have won at least NUMBER_1 awards .	now => ( @org.schema.Person.Person ) filter count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) >= NUMBER_0 and count ( param:award:Array(String) ) >= NUMBER_1 => notify
rerun1f193	find microsoft employee	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " microsoft " ^^org.schema.Person:Organization => notify
rerun2f26	give me the names of people who work at amazon .	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
rerun1f33	find people who live in phoenix .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " phoenix " => notify
rerun1f27	who has only worked for one company ?	now => ( @org.schema.Person.Person ) filter count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) == 1 => notify
rerun1f100	find someone who works at amazon	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
rerun2f73	find a facebook employee that went to penn state	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " penn state " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " facebook " ^^org.schema.Person:Organization => notify
rerun1f26	who lives in seattle ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " seattle " => notify
rerun1f179	show mw a person who has worked more then NUMBER_0 jobs .	now => ( @org.schema.Person.Person ) filter count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) >= NUMBER_0 => notify
rerun2f159	who has the most awards at google ?	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization ) ) ) [ 1 ] => notify
rerun1f15	who is living in seattle ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " seattle " => notify
rerun1f182	find a amazon employee .	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
rerun2f163	i would like to know who went to penn state and is employed at instagram .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " penn state " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " instagram " ^^org.schema.Person:Organization => notify
rerun2f108	show a microsoft employee who went to harvard .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " microsoft " ^^org.schema.Person:Organization => notify
rerun1f43	who won a pulitzer prize ?	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " pulitzer prize " => notify
rerun1f59	who has won more than NUMBER_0 awards for their work ?	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= NUMBER_0 => notify
rerun2f177	which members won a penn/faulkner award and went to columbia university ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " columbia university " ^^org.schema.Person:Organization and param:award:Array(String) contains~ " penn/faulkner " => notify
rerun1f102	who won more than NUMBER_0 awards ?	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= NUMBER_0 => notify
rerun2f109	tell me the name of who won NUMBER_0 awards .	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) == NUMBER_0 => notify
rerun1f60	who is an alumni of more than one university ?	now => ( @org.schema.Person.Person ) filter count ( param:alumniOf:Array(Entity(org.schema.Person:Organization)) ) >= 1 => notify
rerun1f91	show who lives in gilbert , arizona	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " gilbert , arizona " => notify
rerun2f153	show me a list of employees who attended at least NUMBER_0 colleges and won at least NUMBER_1 awards .	now => ( @org.schema.Person.Person ) filter count ( param:alumniOf:Array(Entity(org.schema.Person:Organization)) ) >= NUMBER_0 and count ( param:award:Array(String) ) >= NUMBER_1 => notify
rerun1f127	show me pulitzer prize winners .	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " pulitzer prize " => notify
rerun1f160	find someone who works for facebook	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " facebook " ^^org.schema.Person:Organization => notify
rerun1f107	show people who have won more than NUMBER_0 oscars .	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) filter { param:value:String =~ " oscars " } ) >= NUMBER_0 => notify
rerun1f186	who went to the university of wisconsin ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " university of wisconsin " ^^org.schema.Person:Organization => notify
rerun2f193	who worked for both oracle and linksys ?	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " oracle " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " linksys " ^^org.schema.Person:Organization => notify
rerun1f120	who went to yale ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " yale " ^^org.schema.Person:Organization => notify
rerun2f6	who won the pulitzer prize and went to brown university .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " brown university " ^^org.schema.Person:Organization and param:award:Array(String) contains~ " pulitzer prize " => notify
rerun1f62	who went to princeton ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " princeton " ^^org.schema.Person:Organization => notify
rerun2f22	who has worked for amazon and went to harvard ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
rerun2f162	tell me the name of a person who works at amazon .	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
rerun2f195	find the name of someone who lives in seattle .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " seattle " => notify
rerun1f180	who went to columbia ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " columbia " ^^org.schema.Person:Organization => notify
rerun1f37	find anyone who had a brighthouse scholarship .	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " brighthouse scholarship " => notify
rerun1f162	pull up people who worked for amazon	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
rerun2f62	tell me all the employees at apple who went to yale .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " yale " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " apple " ^^org.schema.Person:Organization => notify
rerun1f130	who has worked for amazon ?	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
rerun2f164	who held more than NUMBER_0 jobs and got awards ?	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= 1 and count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) >= NUMBER_0 => notify
rerun1f8	find someone who worked at target .	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " target " ^^org.schema.Person:Organization => notify
rerun2f161	find a person who was educated at harvard and works at facebook .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " facebook " ^^org.schema.Person:Organization => notify
rerun1f165	show someone who won teacher of the year .	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " teacher of the year " => notify
rerun2f149	what stanford alum has worked for uber and lyft ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " stanford " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " uber " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " lyft " ^^org.schema.Person:Organization => notify
rerun2f53	who has gone to usc and works for general motors ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " usc " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " general motors " ^^org.schema.Person:Organization => notify
rerun2f23	what people have won the pulitzer prize and went to stanford	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " stanford " ^^org.schema.Person:Organization and param:award:Array(String) contains~ " pulitzer prize " => notify
rerun2f141	find a twitter employee that went to new york university .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " new york university " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " twitter " ^^org.schema.Person:Organization => notify
rerun2f105	who won the golden globe and lives in california .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " california " and param:award:Array(String) contains~ " golden globe " => notify
rerun2f85	show me the number of awards for employees at google .	now => compute count ( param:award:Array(String) ) of ( ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization ) => notify
rerun1f71	who went to yale ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " yale " ^^org.schema.Person:Organization => notify
rerun1f46	who has received a bright futures scholarship ?	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " bright futures scholarship " => notify
rerun1f138	who has been on the dean 's list ?	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " dean 's list " => notify
rerun1f65	who went to stanford ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " stanford " ^^org.schema.Person:Organization => notify
rerun2f196	who has won a nobel prize from yale ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " yale " ^^org.schema.Person:Organization and param:award:Array(String) contains~ " nobel prize " => notify
rerun2f156	who went to harvard and has worked at google ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
rerun2f8	what are the names of people who won at least NUMBER_0 awards ?	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= NUMBER_0 => notify
rerun1f2	show me who lives in new york ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " new york " => notify
rerun2f28	find people working at allstate who have won at least NUMBER_0 awards .	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= NUMBER_0 and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " allstate " ^^org.schema.Person:Organization => notify
rerun1f41	who went to ucla ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " ucla " ^^org.schema.Person:Organization => notify
rerun1f42	find an apple employee .	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " apple " ^^org.schema.Person:Organization => notify
rerun1f84	show me who has worked for NUMBER_0 companies	now => ( @org.schema.Person.Person ) filter count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) == NUMBER_0 => notify
rerun1f183	who has worked for more than NUMBER_0 companies ?	now => ( @org.schema.Person.Person ) filter count ( param:worksFor:Array(Entity(org.schema.Person:Organization)) ) >= NUMBER_0 => notify
rerun2f110	who has at least NUMBER_0 awards and went to harvard university ?	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= NUMBER_0 and param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard university " ^^org.schema.Person:Organization => notify
rerun2f16	show me the names of people who were on the dean 's list .	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " dean 's list " => notify
rerun1f161	search for someone who graduated from murray state university	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " murray state university " ^^org.schema.Person:Organization => notify
rerun1f185	find a boeing employee .	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " boeing " ^^org.schema.Person:Organization => notify
rerun1f153	who have worked for google and facebook ?	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " facebook " ^^org.schema.Person:Organization => notify
rerun2f72	find a facebook employee who won more than NUMBER_0 awards	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= NUMBER_0 and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " facebook " ^^org.schema.Person:Organization => notify
rerun1f40	who lives in dallas ?	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " dallas " => notify
rerun1f68	who went to wharton ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " wharton " ^^org.schema.Person:Organization => notify
rerun1f128	search for adobe workers .	now => ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " adobe " ^^org.schema.Person:Organization => notify
rerun1f76	find me employees living in scottsdale .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " scottsdale " => notify
rerun2f185	who works at google and has won multiple awards ?	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= 1 and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
1	what 's the fax number for seal ?	now => [ param:faxNumber:Entity(tt:phone_number) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " seal " ) => notify
3	what 's the job title of nancy pelosi ?	now => [ param:jobTitle:String ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " nancy pelosi " ) => notify
5	please get me an image of john legend .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " john legend " ) => notify
9	get me the name of the ceo for bank of america .	now => ( @org.schema.Person.Person ) filter param:jobTitle:String =~ " ceo " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " bank of america " ^^org.schema.Person:Organization => notify
10	find me an image of bill gates	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " bill gates " ) => notify
11	what is the job title of jeff bezos ?	now => [ param:jobTitle:String ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " jeff bezos " ) => notify
12	how many languages does pete buttigieg speak ?	now => [ param:count:Number ] of ( compute count ( param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ) of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " pete buttigieg " ) ) => notify
17	what languages does pete buttigieg speak ?	now => [ param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " pete buttigieg " ) => notify
18	what is stephenie meyer 's webpage ?	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " stephenie meyer " ) => notify
19	where does marc benioff work ?	now => [ param:workLocation:Location ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " marc benioff " ) => notify
22	how many languages does mark zuckerberg speak ?	now => [ param:count:Number ] of ( compute count ( param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ) of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " mark zuckerberg " ) ) => notify
26	can you please find me someone who speaks tagalog , and english who works in honolulu , hawaii ?	now => ( @org.schema.Person.Person ) filter param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " english " ^^tt:iso_lang_code and param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " tagalog " ^^tt:iso_lang_code and param:workLocation:Location == location: " honolulu , hawaii " => notify
28	can you please provide me the email address of the person with the phone number PHONE_NUMBER_0 ?	now => [ param:email:Entity(tt:email_address) ] of ( ( @org.schema.Person.Person ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
29	i 'm looking for the types of awards that the person with the email address EMAIL_ADDRESS_0 .	now => [ param:award:Array(String) ] of ( ( @org.schema.Person.Person ) filter param:email:Entity(tt:email_address) == EMAIL_ADDRESS_0 ) => notify
30	find a google employee that speaks arabic .	now => ( @org.schema.Person.Person ) filter param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " arabic " ^^tt:iso_lang_code and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
31	what is thomas murphy 's job title ?	now => [ param:jobTitle:String ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " thomas murphy " ) => notify
35	who is the head of amazon ?	now => ( @org.schema.Person.Person ) filter param:jobTitle:String =~ " head of amazon " => notify
36	what is the job title of bill gates ?	now => [ param:jobTitle:String ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " bill gates " ) => notify
37	how many languages does elon musk speak ?	now => [ param:count:Number ] of ( compute count ( param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ) of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " elon musk " ) ) => notify
41	what languages does donald trump speak ?	now => [ param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " donald trump " ) => notify
44	tell me the job title of tim cook ?	now => [ param:jobTitle:String ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " tim cook " ) => notify
45	what is tucker carlson 's job title ?	now => [ param:jobTitle:String ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " tucker carlson " ) => notify
46	give me the email of everyone educated at harvard	now => [ param:email:Entity(tt:email_address) ] of ( ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization ) => notify
48	who speaks english and latin ?	now => ( @org.schema.Person.Person ) filter param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " english " ^^tt:iso_lang_code and param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " latin " ^^tt:iso_lang_code => notify
49	show me images of lacey love	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " lacey love " ) => notify
53	how many languages does shakira speak ?	now => [ param:count:Number ] of ( compute count ( param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ) of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " shakira " ) ) => notify
55	what languages do they speak and do they have any awards ?	now => [ param:award:Array(String) , param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ] of ( @org.schema.Person.Person ) => notify
57	do they have a fax and email ?	now => [ param:email:Entity(tt:email_address) , param:faxNumber:Entity(tt:phone_number) ] of ( @org.schema.Person.Person ) => notify
59	can you tell me where they work and their job title ?	now => [ param:jobTitle:String , param:worksFor:Array(Entity(org.schema.Person:Organization)) ] of ( @org.schema.Person.Person ) => notify
64	are there people in jamaica who speak italian	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " jamaica " and param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " italian " ^^tt:iso_lang_code => notify
71	what languages does this person speak ?	now => [ param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ] of ( @org.schema.Person.Person ) => notify
74	what is this person 's email address ?	now => [ param:email:Entity(tt:email_address) ] of ( @org.schema.Person.Person ) => notify
75	which person speaks the most languages ?	now => ( sort param:count:Number desc of ( compute count ( param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ) of ( @org.schema.Person.Person ) ) ) [ 1 ] => notify
79	what 's the telephone numbers of people that speak latvian ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Person.Person ) filter param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " latvian " ^^tt:iso_lang_code ) => notify
81	what is the person 's job title at the work location ?	now => [ param:jobTitle:String ] of ( @org.schema.Person.Person ) => notify
82	what email and phone can the person be reached at ?	now => [ param:email:Entity(tt:email_address) , param:telephone:Entity(tt:phone_number) ] of ( @org.schema.Person.Person ) => notify
87	who is the current president of the eagles club ?	now => ( @org.schema.Person.Person ) filter param:jobTitle:String =~ " president " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " eagles club " ^^org.schema.Person:Organization => notify
89	what is the email of the dean at harvard university ?	now => [ param:email:Entity(tt:email_address) ] of ( ( @org.schema.Person.Person ) filter param:jobTitle:String =~ " dean " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " harvard university " ^^org.schema.Person:Organization ) => notify
90	find a person who speaks german with a degree from ucla .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " ucla " ^^org.schema.Person:Organization and param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " german " ^^tt:iso_lang_code => notify
91	find an engineer living in detroit , mi .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " detroit " and param:jobTitle:String =~ " engineer " => notify
92	who has the telephone number PHONE_NUMBER_0 ?	now => ( @org.schema.Person.Person ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
94	who is the ceo of dupont ?	now => ( @org.schema.Person.Person ) filter param:jobTitle:String =~ " ceo " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " dupont " ^^org.schema.Person:Organization => notify
95	show all engineers working for microsoft	now => ( @org.schema.Person.Person ) filter param:jobTitle:String =~ " engineers " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " microsoft " ^^org.schema.Person:Organization => notify
98	list all it support workers in dallas	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " dallas " and param:jobTitle:String =~ " it support " => notify
68	how many languages do employees of microsoft speak on average ?	now => aggregate avg param:count:Number of ( ( compute count ( param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ) of ( @org.schema.Person.Person ) ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " microsoft " ^^org.schema.Person:Organization ) => notify
100	find me people who have worked for boeing as sales managers .	now => ( @org.schema.Person.Person ) filter param:jobTitle:String =~ " sales managers " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " boeing " ^^org.schema.Person:Organization => notify
103	get me the names of people who speak german and work for apple .	now => ( @org.schema.Person.Person ) filter param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " german " ^^tt:iso_lang_code and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " apple " ^^org.schema.Person:Organization => notify
106	what language does djimon hounsou speak ?	now => [ param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " djimon hounsou " ) => notify
109	what is nancy pelosi 's official job title ?	now => [ param:jobTitle:String ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " nancy pelosi " ) => notify
110	find me any creative directors working for wizards of the coast , llc .	now => ( @org.schema.Person.Person ) filter param:jobTitle:String =~ " creative directors " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " wizards of the coast " ^^org.schema.Person:Organization => notify
111	search for jeff bezos 's profile image .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " jeff bezos " ) => notify
112	find me any chief executive officers living in marana , arizona .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " marana , arizona " and param:jobTitle:String =~ " chief executive officers " => notify
113	look for operations directors who graduated from florida state university .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " florida state university " ^^org.schema.Person:Organization and param:jobTitle:String =~ " operations directors " => notify
122	what is the name of the ceo of espn ?	now => ( @org.schema.Person.Person ) filter param:jobTitle:String =~ " ceo " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " espn " ^^org.schema.Person:Organization => notify
124	from what college did the ceo of hbo graduate ?	now => [ param:alumniOf:Array(Entity(org.schema.Person:Organization)) ] of ( ( @org.schema.Person.Person ) filter param:jobTitle:String =~ " ceo " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " hbo " ^^org.schema.Person:Organization ) => notify
136	i want to know the url for travis scott 's website	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " travis scott " ) => notify
140	please search for someone who speaks russian .	now => ( @org.schema.Person.Person ) filter param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " russian " ^^tt:iso_lang_code => notify
141	find me the url for the page of a bryn mawr college alumnus .	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " bryn mawr college " ^^org.schema.Person:Organization ) => notify
142	i am looking for someone employed by ups who speaks chinese .	now => ( @org.schema.Person.Person ) filter param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " chinese " ^^tt:iso_lang_code and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " ups " ^^org.schema.Person:Organization => notify
143	please show the profile image of a person who lives in mexico city .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " mexico city " ) => notify
145	what is a person with the job title of clerk and speaks english ?	now => ( @org.schema.Person.Person ) filter param:jobTitle:String =~ " clerk " and param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " english " ^^tt:iso_lang_code => notify
152	what languages does barack obama speak ?	now => [ param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " barack obama " ) => notify
153	send me the profile image for taylor swift .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " taylor swift " ) => notify
154	i want the url for michael jordan .	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " michael jordan " ) => notify
156	find me the telephone and fax number	now => [ param:faxNumber:Entity(tt:phone_number) , param:telephone:Entity(tt:phone_number) ] of ( @org.schema.Person.Person ) => notify
158	show me this person 's profile image	now => [ param:image:Entity(tt:picture) ] of ( @org.schema.Person.Person ) => notify
159	does this person have a website url	now => [ param:url:Entity(tt:url) ] of ( @org.schema.Person.Person ) => notify
164	what is the email address for bill gates ?	now => [ param:email:Entity(tt:email_address) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " bill gates " ) => notify
166	what is maria menteros ' job title ?	now => [ param:jobTitle:String ] of ( ( @org.schema.Person.Person ) filter param:jobTitle:String =~ " maria menteros " ) => notify
167	what is the email address for ryan taylor ?	now => [ param:email:Entity(tt:email_address) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " ryan taylor " ) => notify
168	what is gerald ryan 's phone number ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " gerald ryan " ) => notify
173	please show me all candidates who speak english and spanish .	now => ( @org.schema.Person.Person ) filter param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " english " ^^tt:iso_lang_code and param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " spanish " ^^tt:iso_lang_code => notify
176	show me the profile photo of all the people who speak more than 10 languages .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Person.Person ) filter count ( param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ) >= 10 ) => notify
182	which artist speaks the most languages ?	now => ( sort param:count:Number desc of ( compute count ( param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ) of ( ( @org.schema.Person.Person ) filter param:jobTitle:String =~ " artist " ) ) ) [ 1 ] => notify
186	people in ethiopa who speak english	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " ethiopa " and param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " english " ^^tt:iso_lang_code => notify
190	who is the ceo of ford motor company ?	now => ( @org.schema.Person.Person ) filter param:jobTitle:String =~ " ceo " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " ford motor company " ^^org.schema.Person:Organization => notify
192	what languages does koh dong-jin speak ?	now => [ param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " koh dong-jin " ) => notify
193	where can i find the personal page of bill gates ?	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " bill gates " ) => notify
196	can you tell me the job title of stephanie johnson ?	now => [ param:jobTitle:String ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " stephanie johnson " ) => notify
75	what awards has brad pitt won ?	now => [ param:award:Array(String) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " brad pitt " ) => notify
76	what does brad pitt look like ?	now => [ param:image:Entity(tt:picture) ] of ( @org.schema.Person.Person ) => notify
77	where does jeff bezos live ?	now => [ param:address.addressLocality:String ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " jeff bezos " ) => notify
78	what languages does jeff bezos speak ?	now => [ param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " jeff bezos " ) => notify
79	what languages does yoko ono speak ?	now => [ param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " yoko ono " ) => notify
80	show me a profile image of bill gates .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " bill gates " ) => notify
81	where did oprah winfrey graduate from college ?	now => [ param:alumniOf:Array(Entity(org.schema.Person:Organization)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " oprah winfrey " ) => notify
83	what languages does jeff bezos speak ?	now => [ param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " jeff bezos " ) => notify
84	what is bob iger 's offical title ?	now => [ param:jobTitle:String ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " bob iger " ) => notify
85	show me images for people who have the job title of train operator .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Person.Person ) filter param:jobTitle:String =~ " train operator " ) => notify
86	tell me the work location of the person named stephanie lawson .	now => [ param:workLocation:Location ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " stephanie lawson " ) => notify
87	can you give me a list of everyone who speaks french and works at sony ?	now => ( @org.schema.Person.Person ) filter param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " french " ^^tt:iso_lang_code and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " sony " ^^org.schema.Person:Organization => notify
88	i 'm trying to find the name of the person who won the employee of the year award previously .	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " employee of the year " => notify
89	how many people working at cvs graduated from emory university ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " emory university " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " cvs " ^^org.schema.Person:Organization => notify
90	please list japanese language speakers who work in downtown cincinnati .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " downtown cincinnati " and param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " japanese " ^^tt:iso_lang_code => notify
91	i am interested in sarah lawrence college alumni who work for google .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " sarah lawrence college " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
92	i want to find baylor college graduates who speak german .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " baylor college " ^^org.schema.Person:Organization and param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " german " ^^tt:iso_lang_code => notify
93	please show me the profile image for someone who works at exxon .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " exxon " ^^org.schema.Person:Organization ) => notify
94	i am looking for the url of the webpage for anyone employed by chevron .	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Person.Person ) filter param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " chevron " ^^org.schema.Person:Organization ) => notify
95	find me a person that speaks spanish that has worked for dell .	now => ( @org.schema.Person.Person ) filter param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " spanish " ^^tt:iso_lang_code and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " dell " ^^org.schema.Person:Organization => notify
96	can you look up someone who works in seattle , wa and used to work for geico .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " seattle , wa " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " geico " ^^org.schema.Person:Organization => notify
97	i need a person who went to university of illinois and worked for corporate jimmy john 's .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " university of illinois " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " jimmy john 's " ^^org.schema.Person:Organization => notify
98	look up someone who lives in new york , but works in new jersey .	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " new york " and param:workLocation:Location == location: " new jersey " => notify
99	can you find an individual that went to harvard and ended up at skylar capital ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " skylar capital " ^^org.schema.Person:Organization => notify
101	does my ethics professor speak thai ?	now => ( @org.schema.Person.Person ) filter param:jobTitle:String =~ " ethics professor " and param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " thai " ^^tt:iso_lang_code => notify
105	who in the database holds the most awards ?	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @org.schema.Person.Person ) ) ) [ 1 ] => notify
106	what is leonardo dicaprio 's home address ?	now => [ param:address.addressLocality:String ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " leonardo dicaprio " ) => notify
107	which college did mitch mcconnell graduate from ?	now => [ param:alumniOf:Array(Entity(org.schema.Person:Organization)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " mitch mcconnell " ) => notify
108	give me a list of all the companies tim cook has worked for .	now => [ param:worksFor:Array(Entity(org.schema.Person:Organization)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " tim cook " ) => notify
109	which languages does shantanu narayen speak ?	now => [ param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " shantanu narayen " ) => notify
110	find me people named michael that work for dark horse media .	now => ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " michael " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " dark horse media " ^^org.schema.Person:Organization => notify
111	search for people working for merck & co . with the job title of controller .	now => ( @org.schema.Person.Person ) filter param:jobTitle:String =~ " controller " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " merck & co " ^^org.schema.Person:Organization => notify
112	find me all concentrix employees who have won a customer service award .	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " customer service " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " concentrix " ^^org.schema.Person:Organization => notify
113	look for raytheon company employees who graduated from western michigan university .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " western michigan university " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " raytheon company " ^^org.schema.Person:Organization => notify
114	locate any exxon mobil workers who can speak persian , english , and arabic .	now => ( @org.schema.Person.Person ) filter param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " arabic " ^^tt:iso_lang_code and param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " english " ^^tt:iso_lang_code and param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " persian " ^^tt:iso_lang_code and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " exxon mobil " ^^org.schema.Person:Organization => notify
115	can you find me a photo of the ceo of amazon ?	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Person.Person ) filter param:jobTitle:String =~ " ceo " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization ) => notify
116	what is the email address for bill gates ?	now => [ param:email:Entity(tt:email_address) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " bill gates " ) => notify
117	what college did mark zuckerberg go to ?	now => [ param:alumniOf:Array(Entity(org.schema.Person:Organization)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " mark zuckerberg " ) => notify
118	what job does tim cook have at apple ?	now => [ param:jobTitle:String ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " tim cook " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " apple " ^^org.schema.Person:Organization ) => notify
119	what company does warren buffett run ?	now => [ param:worksFor:Array(Entity(org.schema.Person:Organization)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " warren buffett " ) => notify
120	which city does george clooney live ?	now => [ param:address.addressLocality:String ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " george clooney " ) => notify
121	what awards has george clooney won ?	now => [ param:award:Array(String) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " george clooney " ) => notify
122	how many languages does george clooney speak ?	now => [ param:count:Number ] of ( compute count ( param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ) of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " george clooney " ) ) => notify
123	show me a picture of george clooney .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " george clooney " ) => notify
124	what is george clooney 's public email ?	now => [ param:email:Entity(tt:email_address) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " george clooney " ) => notify
125	can you give me the webpage url for joe biden ?	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " joe biden " ) => notify
126	who is elon musk ?	now => ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " elon musk " => notify
127	what is the email address of jeff bezos ?	now => [ param:email:Entity(tt:email_address) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " jeff bezos " ) => notify
128	what language does priyanka chopra speak ?	now => [ param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " priyanka chopra " ) => notify
129	can you show me a picture of bill clinton ?	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " bill clinton " ) => notify
130	where does dr. allison smith currently work ?	now => [ param:worksFor:Array(Entity(org.schema.Person:Organization)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " allison smith " ) => notify	now => [ param:workLocation:Location ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " allison smith " ) => notify
132	what is the phone number for vetinarian robert packard in georgia ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " georgia " and param:id:Entity(org.schema.Person:Person) =~ " robert packard " and param:jobTitle:String =~ " vetinarian " ) => notify
133	who is the current ceo for disney ?	now => ( @org.schema.Person.Person ) filter param:jobTitle:String =~ " ceo " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " disney " ^^org.schema.Person:Organization => notify
135	what languages does jimmy carter speak ?	now => [ param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " jimmy carter " ) => notify
136	which awards has jimmy carter won ?	now => [ param:award:Array(String) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " jimmy carter " ) => notify
137	what city does jimmy carter reside in ?	now => [ param:address.addressLocality:String ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " jimmy carter " ) => notify
138	what is jimmy carter 's email address ?	now => [ param:email:Entity(tt:email_address) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " jimmy carter " ) => notify
139	where did jimmy carter graduate from ?	now => [ param:alumniOf:Array(Entity(org.schema.Person:Organization)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " jimmy carter " ) => notify
140	what college did bill gates attend ?	now => [ param:alumniOf:Array(Entity(org.schema.Person:Organization)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " bill gates " ) => notify
141	what city does oprah winfrey live in ?	now => [ param:address.addressLocality:String ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " oprah winfrey " ) => notify
142	find me an image of jamie fox .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " jamie fox " ) => notify
143	does elon musk still work at tesla ?	now => ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " elon musk " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " tesla " ^^org.schema.Person:Organization => notify
144	what company does hillary clinton work for	now => [ param:worksFor:Array(Entity(org.schema.Person:Organization)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " hillary clinton " ) => notify
146	find me all the people with the title manager that work at amazon .	now => ( @org.schema.Person.Person ) filter param:jobTitle:String =~ " manager " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " amazon " ^^org.schema.Person:Organization => notify
147	give me the name of all the people that work at google who graduated from ucla .	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " ucla " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
149	what is the job title of the people with the most emmy awards .	now => [ param:jobTitle:String ] of ( ( sort param:count:Number desc of ( compute count ( param:award:Array(String) filter { param:value:String =~ " emmy " } ) of ( @org.schema.Person.Person ) ) ) [ 1 ] ) => notify
150	who graduated from penn state and speaks swahili ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " penn state " ^^org.schema.Person:Organization and param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " swahili " ^^tt:iso_lang_code => notify
151	where did john mckenzie go to school ?	now => [ param:alumniOf:Array(Entity(org.schema.Person:Organization)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " john mckenzie " ) => notify
152	what are the names of the harvard graduates who work for morgan stanley ?	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " morgan stanley " ^^org.schema.Person:Organization => notify
153	who works at the new york times and has won a pulitzer prize ?	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " pulitzer prize " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " new york times " ^^org.schema.Person:Organization => notify
154	show me a picture of maureen dowd .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " maureen dowd " ) => notify
156	in what city does this person reside ?	now => [ param:address.addressLocality:String ] of ( @org.schema.Person.Person ) => notify
158	what company does this person work for ?	now => [ param:worksFor:Array(Entity(org.schema.Person:Organization)) ] of ( @org.schema.Person.Person ) => notify
159	what is this person 's offical job title ?	now => [ param:jobTitle:String ] of ( @org.schema.Person.Person ) => notify
160	where does the person who speaks spanish and french work ?	now => [ param:worksFor:Array(Entity(org.schema.Person:Organization)) ] of ( ( @org.schema.Person.Person ) filter param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " french " ^^tt:iso_lang_code and param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " spanish " ^^tt:iso_lang_code ) => notify
161	where did the head of hr go to college ?	now => [ param:alumniOf:Array(Entity(org.schema.Person:Organization)) ] of ( ( @org.schema.Person.Person ) filter param:jobTitle:String =~ " head of hr " ) => notify
163	can you give me the links to all the graduates of harvard that work at microsoft ?	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " harvard " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " microsoft " ^^org.schema.Person:Organization ) => notify
164	who has the fax number PHONE_NUMBER_0 ?	now => ( @org.schema.Person.Person ) filter param:faxNumber:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
165	find me people living in detroit who work as a data scientist	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " detroit " and param:jobTitle:String =~ " data scientist " => notify
166	i 'm looking for people who have won the nobel peace prize	now => ( @org.schema.Person.Person ) filter param:award:Array(String) contains~ " nobel peace prize " => notify
167	could you look for people who are working for bechtel who graduated from duke university	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " duke university " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " bechtel " ^^org.schema.Person:Organization => notify
168	i want to find google employees who live in des moines iowa	now => ( @org.schema.Person.Person ) filter param:address.addressLocality:String =~ " des moines iowa " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
169	show me people who graduated from asu who work for google now	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " asu " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
170	what image do they have for their profile ?	now => [ param:image:Entity(tt:picture) ] of ( @org.schema.Person.Person ) => notify
172	what 's the phone number available for contact ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( @org.schema.Person.Person ) => notify
173	what school did they graduate from ?	now => [ param:alumniOf:Array(Entity(org.schema.Person:Organization)) ] of ( @org.schema.Person.Person ) => notify
175	where does bill gates live ?	now => [ param:address.addressLocality:String ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " bill gates " ) => notify
176	can i get the fax number for anthony fauci ?	now => [ param:faxNumber:Entity(tt:phone_number) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " anthony fauci " ) => notify
177	show me the image of a person who speaks swedish	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Person.Person ) filter param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " swedish " ^^tt:iso_lang_code ) => notify
178	show people who went to stanford and work at google	now => ( @org.schema.Person.Person ) filter param:alumniOf:Array(Entity(org.schema.Person:Organization)) contains " stanford " ^^org.schema.Person:Organization and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " google " ^^org.schema.Person:Organization => notify
179	give me the phone number of everyone with at least 5 awards	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= 5 ) => notify
180	is nina rogers able to communicate in any languages other than english ?	now => [ param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " nina rogers " ) => notify
181	what university did bill marlow get his business degree from ?	now => [ param:alumniOf:Array(Entity(org.schema.Person:Organization)) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " bill marlow " ) => notify
182	do you know john smith 's address at his workplace ?	now => [ param:workLocation:Location ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " john smith " ) => notify
184	can you show me a photo of what mary johnson looks like ?	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " mary johnson " ) => notify
185	how many award winning journalists work for the new york times ?	now => ( @org.schema.Person.Person ) filter count ( param:award:Array(String) ) >= 1 and param:jobTitle:String ~= " journalists " and param:worksFor:Array(Entity(org.schema.Person:Organization)) contains " new york times " ^^org.schema.Person:Organization => notify
186	find a native spanish speaker working as a teacher	now => ( @org.schema.Person.Person ) filter param:jobTitle:String =~ " teacher " and param:knowsLanguage:Array(Entity(tt:iso_lang_code)) contains " spanish " ^^tt:iso_lang_code => notify
187	show me the linked in profile for elon musk	now => [ param:url:Entity(tt:url) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " elon musk " ) => notify
188	where is bill gates office located ?	now => [ param:workLocation:Location ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " bill gates " ) => notify
189	find email and telephone number for john smith	now => [ param:email:Entity(tt:email_address) , param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Person.Person ) filter param:id:Entity(org.schema.Person:Person) =~ " john smith " ) => notify
190	where is this person located	now => [ param:address.addressLocality:String ] of ( @org.schema.Person.Person ) => notify
191	is this person multi-lingual	now => [ param:knowsLanguage:Array(Entity(tt:iso_lang_code)) ] of ( @org.schema.Person.Person ) => notify
192	where does this person work	now => [ param:worksFor:Array(Entity(org.schema.Person:Organization)) ] of ( @org.schema.Person.Person ) => notify	now => [ param:workLocation:Location ] of ( @org.schema.Person.Person ) => notify
193	find me an email address	now => [ param:email:Entity(tt:email_address) ] of ( @org.schema.Person.Person ) => notify
194	do you have a fax number available	now => [ param:faxNumber:Entity(tt:phone_number) ] of ( @org.schema.Person.Person ) => notify
