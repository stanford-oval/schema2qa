class @org.schema.Restaurant
#_[name="Restaurant in Schema.org"]
#_[description="Scraped data from websites that support schema.org"]
#[whitelist=["Restaurant", "Review"]] {
  import loader from @org.thingpedia.v2();
  import config from @org.thingpedia.config.none();

  entity Thing
    #[has_ner=true];
  entity Place
    #[has_ner=true];
  entity Organization
    #[has_ner=true];
  entity Person
    #[has_ner=true];
  entity CreativeWork
    #[has_ner=false];
  entity LocalBusiness
    #[has_ner=true];
  entity FoodEstablishment
    #[has_ner=true];
  entity Restaurant
    #[has_ner=true];
  entity Review
    #[has_ner=false];

  list query Thing(out id: Entity(org.schema.Restaurant:Thing)
                   #_[canonical={
                     base=["name"],
                     passive_verb=["called", "named"]
                   }]
                   #[unique=true]
                   #[filterable=true]
                   #[org_schema_has_data=true],
                   out image: Entity(tt:picture)
                   #_[canonical={
                     base=["picture", "image", "photo"]
                   }]
                   #[org_schema_type="ImageObject"]
                   #[org_schema_has_data=true],
                   out description: String
                   #_[canonical={
                     base=["description", "summary"]
                   }]
                   #[org_schema_type="Text"]
                   #[filterable=false]
                   #[string_values="org.schema.Restaurant:Thing_description"]
                   #[org_schema_has_data=true])
  #_[canonical="thing"]
  #_[confirmation="thing"]
  #[confirm=false]
  #[minimal_projection=["id"]]
  #[org_schema_has_data=true]
  #[org_schema_has_name=true];

  list query Place extends Thing(out id: Entity(org.schema.Restaurant:Place)
                                 #_[canonical={
                                   base=["name"],
                                   passive_verb=["called", "named"]
                                 }]
                                 #[unique=true]
                                 #[filterable=true]
                                 #[org_schema_has_data=true],
                                 out aggregateRating: {
                                   reviewCount: Number
                                   #_[counted_object=["reviews"]]
                                   #_[canonical={
                                     default="property",
                                     base=["review count"]
                                   }]
                                   #[org_schema_type="Integer"]
                                   #[org_schema_has_data=true],
                                   ratingValue: Number
                                   #_[canonical={
                                     passive_verb=["rated # star"],
                                     base=["rating", "overall rating", "average rating", "customer rating", "review rating"],
                                     adjective=["# star"],
                                     adjective_argmax=["top-rated", "best"],
                                     projection_pronoun=["how"],
                                     passive_verb_projection=["rated"]
                                   }]
                                   #[org_schema_type="Number"]
                                   #[min_number=1]
                                   #[max_number=5]
                                   #[org_schema_has_data=true]
                                 }
                                 #_[canonical={
                                   default="property",
                                   base=["aggregate rating"]
                                 }]
                                 #[org_schema_type="AggregateRating"]
                                 #[org_schema_has_data=true],
                                 out smokingAllowed: Boolean
                                 #_[canonical={
                                   property_true=["smoking allowed"],
                                   property_false=["no smoking"],
                                   verb_true=["allows smoking"]
                                 }]
                                 #[org_schema_type="Boolean"],
                                 out address: {
                                   postalCode: String
                                   #_[canonical={
                                     base=["postal code", "postcode", "zip code"],
                                     preposition=["in #", "from #"]
                                   }]
                                   #[org_schema_type="Text"]
                                   #[string_values="org.schema.Restaurant:Place_address_postalCode"]
                                   #[org_schema_has_data=true],
                                   addressCountry: Entity(tt:country)
                                   #_[canonical={
                                     preposition=["in #", "from #"],
                                     base=["country"]
                                   }]
                                   #[org_schema_type="Text"]
                                   #[org_schema_has_data=true],
                                   addressRegion: Entity(tt:us_state)
                                   #_[canonical={
                                     preposition=["in #", "from #"],
                                     base=["state"]
                                   }]
                                   #[org_schema_type="Text"]
                                   #[org_schema_has_data=true]
                                 }
                                 #_[canonical={
                                   default="property",
                                   base=["address"]
                                 }]
                                 #[org_schema_type="PostalAddress"]
                                 #[org_schema_has_data=true],
                                 out review: Array(Entity(org.schema.Restaurant:Review))
                                 #_[canonical={
                                   default="property",
                                   base=["reviews"]
                                 }]
                                 #[org_schema_type="Review"]
                                 #[org_schema_has_data=true],
                                 out telephone: Entity(tt:phone_number)
                                 #_[canonical={
                                   base=["telephone", "phone number"]
                                 }]
                                 #[org_schema_type="Text"]
                                 #[filterable=false]
                                 #[org_schema_has_data=true],
                                 out geo: Location
                                 #_[canonical={
                                   base=["location", "address"]
                                 }]
                                 #[org_schema_type="GeoCoordinates"]
                                 #[org_schema_has_data=false])
  #_[canonical="place"]
  #_[confirmation="place"]
  #[confirm=false]
  #[minimal_projection=["id"]]
  #[org_schema_has_data=true]
  #[org_schema_has_name=true];

  list query Organization extends Thing(out id: Entity(org.schema.Restaurant:Organization)
                                        #_[canonical={
                                          base=["name"],
                                          passive_verb=["called", "named"]
                                        }]
                                        #[unique=true]
                                        #[filterable=true]
                                        #[org_schema_has_data=true],
                                        out aggregateRating: {
                                          reviewCount: Number
                                          #_[counted_object=["reviews"]]
                                          #_[canonical={
                                            default="property",
                                            base=["review count"]
                                          }]
                                          #[org_schema_type="Integer"]
                                          #[org_schema_has_data=true],
                                          ratingValue: Number
                                          #_[canonical={
                                            passive_verb=["rated # star"],
                                            base=["rating", "overall rating", "average rating", "customer rating", "review rating"],
                                            adjective=["# star"],
                                            adjective_argmax=["top-rated", "best"],
                                            projection_pronoun=["how"],
                                            passive_verb_projection=["rated"]
                                          }]
                                          #[org_schema_type="Number"]
                                          #[min_number=1]
                                          #[max_number=5]
                                          #[org_schema_has_data=true]
                                        }
                                        #_[canonical={
                                          default="property",
                                          base=["aggregate rating"]
                                        }]
                                        #[org_schema_type="AggregateRating"]
                                        #[org_schema_has_data=true],
                                        out address: {
                                          postalCode: String
                                          #_[canonical={
                                            base=["postal code", "postcode", "zip code"],
                                            preposition=["in #", "from #"]
                                          }]
                                          #[org_schema_type="Text"]
                                          #[string_values="org.schema.Restaurant:Organization_address_postalCode"]
                                          #[org_schema_has_data=true],
                                          addressCountry: Entity(tt:country)
                                          #_[canonical={
                                            preposition=["in #", "from #"],
                                            base=["country"]
                                          }]
                                          #[org_schema_type="Text"]
                                          #[org_schema_has_data=true],
                                          addressRegion: Entity(tt:us_state)
                                          #_[canonical={
                                            preposition=["in #", "from #"],
                                            base=["state"]
                                          }]
                                          #[org_schema_type="Text"]
                                          #[org_schema_has_data=true]
                                        }
                                        #_[canonical={
                                          default="property",
                                          base=["address"]
                                        }]
                                        #[org_schema_type="PostalAddress"]
                                        #[org_schema_has_data=true],
                                        out review: Array(Entity(org.schema.Restaurant:Review))
                                        #_[canonical={
                                          default="property",
                                          base=["reviews"]
                                        }]
                                        #[org_schema_type="Review"]
                                        #[org_schema_has_data=true],
                                        out telephone: Entity(tt:phone_number)
                                        #_[canonical={
                                          base=["telephone", "phone number"]
                                        }]
                                        #[org_schema_type="Text"]
                                        #[filterable=false]
                                        #[org_schema_has_data=true],
                                        out email: Entity(tt:email_address)
                                        #_[canonical={
                                          default="property",
                                          base=["email"]
                                        }]
                                        #[org_schema_type="Text"]
                                        #[filterable=false])
  #_[canonical="organization"]
  #_[confirmation="organization"]
  #[confirm=false]
  #[minimal_projection=["id"]]
  #[org_schema_has_data=true]
  #[org_schema_has_name=true];

  list query Person extends Thing(out id: Entity(org.schema.Restaurant:Person)
                                  #_[canonical={
                                    base=["name"],
                                    passive_verb=["called", "named"]
                                  }]
                                  #[unique=true]
                                  #[filterable=true]
                                  #[org_schema_has_data=true],
                                  out email: Entity(tt:email_address)
                                  #_[canonical={
                                    default="property",
                                    base=["email"]
                                  }]
                                  #[org_schema_type="Text"]
                                  #[filterable=false])
  #_[canonical="person"]
  #_[confirmation="person"]
  #[confirm=false]
  #[minimal_projection=["id"]]
  #[org_schema_has_data=true]
  #[org_schema_has_name=true];

  list query CreativeWork extends Thing(out id: Entity(org.schema.Restaurant:CreativeWork)
                                        #_[canonical={
                                          base=["name"],
                                          passive_verb=["called", "named"]
                                        }]
                                        #[unique=true]
                                        #[filterable=false]
                                        #[org_schema_has_data=true],
                                        out datePublished: Date
                                        #_[canonical={
                                          passive_verb=["published on #", "written on #"],
                                          base=["date published"],
                                          adjective_argmax=["most recent", "latest", "last", "newest"],
                                          adjective_argmin=["earliest", "first", "oldest"],
                                          base_projection=["date", "year"],
                                          passive_verb_projection=["published | on", "written | on"]
                                        }]
                                        #[org_schema_type="Date"]
                                        #[org_schema_has_data=true],
                                        out author: Entity(org.schema.Restaurant:Person)
                                        #_[canonical={
                                          base=["author"],
                                          preposition=["by"],
                                          passive_verb=["written by", "authored by", "uploaded by", "submitted by"],
                                          verb=["# wrote", "# authored"],
                                          base_projection=["author", "creator"],
                                          reverse_verb_projection=["wrote", "authored"],
                                          passive_verb_projection=["written | by", "authored | by"]
                                        }]
                                        #[org_schema_type="Person"]
                                        #[org_schema_has_data=true])
  #_[canonical="creative work"]
  #_[confirmation="creative work"]
  #[confirm=false]
  #[minimal_projection=["id"]]
  #[org_schema_has_data=true];

  list query LocalBusiness extends Organization, Place(out id: Entity(org.schema.Restaurant:LocalBusiness)
                                                       #_[canonical={
                                                         base=["name"],
                                                         passive_verb=["called", "named"]
                                                       }]
                                                       #[unique=true]
                                                       #[filterable=true]
                                                       #[org_schema_has_data=true],
                                                       out priceRange: Enum(cheap,moderate,expensive,luxury)
                                                       #_[canonical={
                                                         base=["price range"],
                                                         adjective=["#"]
                                                       }]
                                                       #[org_schema_type="Text"],
                                                       out openingHours: RecurrentTimeSpecification
                                                       #_[canonical={
                                                         verb=["opens at", "opens on"],
                                                         verb_projection=["open", "close"]
                                                       }]
                                                       #[org_schema_type="Text"])
  #_[canonical="local business"]
  #_[confirmation="local business"]
  #[confirm=false]
  #[minimal_projection=["id"]]
  #[org_schema_has_data=true]
  #[org_schema_has_name=true];

  list query FoodEstablishment extends LocalBusiness(out id: Entity(org.schema.Restaurant:FoodEstablishment)
                                                     #_[canonical={
                                                       base=["name"],
                                                       passive_verb=["called", "named"]
                                                     }]
                                                     #[unique=true]
                                                     #[filterable=true]
                                                     #[org_schema_has_data=true],
                                                     out servesCuisine: String
                                                     #_[canonical={
                                                       adjective=["#"],
                                                       verb=["serves # cuisine", "serves # food", "offer # cuisine", "offer # food", "serves", "offers"],
                                                       property=["# cuisine", "# food"],
                                                       base=["cuisine", "food type"],
                                                       base_projection=["food", "cuisine"],
                                                       verb_projection=["serve", "offer", "have"]
                                                     }]
                                                     #[org_schema_type="Text"]
                                                     #[string_values="org.schema.Restaurant:FoodEstablishment_servesCuisine"]
                                                     #[org_schema_has_data=true],
                                                     out acceptsReservations: Boolean
                                                     #_[canonical={
                                                       default="verb",
                                                       verb_true=["accepts reservations"],
                                                       base=["accepts reservations"]
                                                     }]
                                                     #[org_schema_type="Boolean"],
                                                     out starRating: {
                                                       ratingValue: Number
                                                       #_[canonical={
                                                         base=["michelin star rating", "michelin rating", "michelin star"],
                                                         adjective=["michelin # star", "michelin # star"],
                                                         passive_verb=["rated # star by michelin guide"]
                                                       }]
                                                       #[org_schema_type="Number"]
                                                       #[min_number=1]
                                                       #[max_number=5]
                                                     }
                                                     #_[canonical={
                                                       default="property",
                                                       base=["star rating"]
                                                     }]
                                                     #[org_schema_type="Rating"])
  #_[canonical="food establishment"]
  #_[confirmation="food establishment"]
  #[confirm=false]
  #[minimal_projection=["id"]]
  #[org_schema_has_data=true]
  #[org_schema_has_name=true];

  list query Restaurant extends FoodEstablishment(out id: Entity(org.schema.Restaurant:Restaurant)
                                                  #_[canonical={
                                                    base=["name"],
                                                    passive_verb=["called", "named"]
                                                  }]
                                                  #[unique=true]
                                                  #[filterable=true]
                                                  #[string_values="org.openstreetmap:restaurant"]
                                                  #[org_schema_has_data=true])
  #_[canonical=["restaurant", "diner", "place", "joint", "eatery", "canteen", "cafeteria", "cafe"]]
  #_[confirmation="restaurant"]
  #[confirm=false]
  #[minimal_projection=["id"]]
  #[org_schema_has_data=true]
  #[org_schema_has_name=true];

  list query Review extends CreativeWork(out id: Entity(org.schema.Restaurant:Review)
                                         #_[canonical={
                                           base=["name"],
                                           passive_verb=["called", "named"]
                                         }]
                                         #[unique=true]
                                         #[filterable=false]
                                         #[org_schema_has_data=true],
                                         out reviewRating: {
                                           ratingValue: Number
                                           #_[canonical={
                                             passive_verb=["rated # star"],
                                             base=["rating", "overall rating", "average rating", "customer rating", "review rating"],
                                             adjective=["# star"],
                                             adjective_argmax=["top-rated", "best"],
                                             projection_pronoun=["how"],
                                             passive_verb_projection=["rated"]
                                           }]
                                           #[org_schema_type="Number"]
                                           #[min_number=1]
                                           #[max_number=5]
                                           #[org_schema_has_data=true]
                                         }
                                         #_[canonical={
                                           base=["rating"]
                                         }]
                                         #[org_schema_type="Rating"]
                                         #[org_schema_has_data=true])
  #_[canonical="review"]
  #_[confirmation="review"]
  #[confirm=false]
  #[minimal_projection=["id"]]
  #[org_schema_has_data=true];
}

